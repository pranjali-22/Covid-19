<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid-data' inline='true' name='federated.0dsscqg1vu7paa1h94muc19vwntl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid-data' name='textscan.14vzylx1mtrwbv1fjq12t08a4q1u'>
            <connection class='textscan' directory='C:/Users/sam/Downloads' filename='covid-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.14vzylx1mtrwbv1fjq12t08a4q1u' name='covid-data.csv' table='[covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='string' name='total_tests' ordinal='25' />
            <column datatype='string' name='new_tests' ordinal='26' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='string' name='new_tests_smoothed' ordinal='29' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='string' name='tests_per_case' ordinal='31' />
            <column datatype='string' name='positive_rate' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.14vzylx1mtrwbv1fjq12t08a4q1u' name='covid-data.csv' table='[covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='string' name='total_tests' ordinal='25' />
            <column datatype='string' name='new_tests' ordinal='26' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='string' name='new_tests_smoothed' ordinal='29' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='string' name='tests_per_case' ordinal='31' />
            <column datatype='string' name='positive_rate' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='covid-data.csv' datatype='table' name='[__tableau_internal_object_id__].[covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='string' name='[extreme_poverty]' role='dimension' type='nominal' />
      <column caption='Female Smokers' datatype='string' name='[female_smokers]' role='dimension' type='nominal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='string' name='[male_smokers]' role='dimension' type='nominal' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='string' name='[new_tests_smoothed]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed Per Thousand' datatype='string' name='[new_tests_smoothed_per_thousand]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='string' name='[positive_rate]' role='dimension' type='nominal' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='string' name='[tests_per_case]' role='dimension' type='nominal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='string' name='[total_tests]' role='dimension' type='nominal' />
      <column caption='Total Tests Per Thousand' datatype='string' name='[total_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Location, Continent'>
          <field>[location]</field>
          <field>[continent]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid-data.csv' id='covid-data.csv_A31FF480BD6E4030A17337C22C6E3A48'>
            <properties context=''>
              <relation connection='textscan.14vzylx1mtrwbv1fjq12t08a4q1u' name='covid-data.csv' table='[covid-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='string' name='total_tests' ordinal='25' />
                  <column datatype='string' name='new_tests' ordinal='26' />
                  <column datatype='string' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='string' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='string' name='tests_per_case' ordinal='31' />
                  <column datatype='string' name='positive_rate' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='real' name='stringency_index' ordinal='34' />
                  <column datatype='real' name='population' ordinal='35' />
                  <column datatype='real' name='population_density' ordinal='36' />
                  <column datatype='real' name='median_age' ordinal='37' />
                  <column datatype='real' name='aged_65_older' ordinal='38' />
                  <column datatype='real' name='aged_70_older' ordinal='39' />
                  <column datatype='real' name='gdp_per_capita' ordinal='40' />
                  <column datatype='string' name='extreme_poverty' ordinal='41' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='43' />
                  <column datatype='string' name='female_smokers' ordinal='44' />
                  <column datatype='string' name='male_smokers' ordinal='45' />
                  <column datatype='real' name='handwashing_facilities' ordinal='46' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
                  <column datatype='real' name='life_expectancy' ordinal='48' />
                  <column datatype='real' name='human_development_index' ordinal='49' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name=' Total Cases per million versus Months'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-data' name='federated.0dsscqg1vu7paa1h94muc19vwntl' />
          </datasources>
          <datasource-dependencies datasource='federated.0dsscqg1vu7paa1h94muc19vwntl'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f5ead7' />
            <format attr='fill-below' id='refline0' value='#dfedeb' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_cases_per_million:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='none' scope='per-pane' value='1000000000.0' value-column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_cases_per_million:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_cases_per_million:qk]</rows>
        <cols>[federated.0dsscqg1vu7paa1h94muc19vwntl].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{D8485F4F-53A5-47AE-847A-C558A77176F1}' />
    </worksheet>
    <worksheet name='Country Vs Diabetes Prevalence'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-data' name='federated.0dsscqg1vu7paa1h94muc19vwntl' />
          </datasources>
          <datasource-dependencies datasource='federated.0dsscqg1vu7paa1h94muc19vwntl'>
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahamas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:diabetes_prevalence:qk]' />
              <color column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:diabetes_prevalence:qk]' />
              <text column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' />
              <text column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:diabetes_prevalence:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{37502630-3DDA-4179-8405-282E39D1B9AD}' />
    </worksheet>
    <worksheet name='Country Vs Life Expectancy'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-data' name='federated.0dsscqg1vu7paa1h94muc19vwntl' />
          </datasources>
          <datasource-dependencies datasource='federated.0dsscqg1vu7paa1h94muc19vwntl'>
            <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahamas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:life_expectancy:qk]' />
              <text column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' />
              <text column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:life_expectancy:qk]' />
              <color column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{38D8FAE7-804C-4194-B038-DE4EFF5503AC}' />
    </worksheet>
    <worksheet name='Country Vs Total Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-data' name='federated.0dsscqg1vu7paa1h94muc19vwntl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dsscqg1vu7paa1h94muc19vwntl'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iran&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_cases:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eaf2e6</color>
                <color>#e3f3db</color>
                <color>#dcf5d0</color>
                <color>#d5f6c5</color>
                <color>#cef8b9</color>
                <color>#c7f9ae</color>
                <color>#c0faa2</color>
                <color>#b8fc96</color>
                <color>#b1fd8b</color>
                <color>#aaff7f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_cases:qk]' />
              <text column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' />
              <lod column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' />
              <geometry column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dsscqg1vu7paa1h94muc19vwntl].[Latitude (generated)]</rows>
        <cols>[federated.0dsscqg1vu7paa1h94muc19vwntl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{967315B6-0717-4AF4-8EA1-B52C4909F001}' />
    </worksheet>
    <worksheet name='Country Vs Total Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-data' name='federated.0dsscqg1vu7paa1h94muc19vwntl' />
          </datasources>
          <datasource-dependencies datasource='federated.0dsscqg1vu7paa1h94muc19vwntl'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahamas&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Falkland Islands&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' />
              <text column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_deaths:qk]</rows>
        <cols>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{EF9395FE-80DE-4F25-95F0-3C59DCC02735}' />
    </worksheet>
    <worksheet name='Top 5 Countries with Maximum No. of Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-data' name='federated.0dsscqg1vu7paa1h94muc19vwntl' />
          </datasources>
          <datasource-dependencies datasource='federated.0dsscqg1vu7paa1h94muc19vwntl'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
                  <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_deaths:qk]</rows>
        <cols>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{90246E4C-F8B7-432C-963E-8780E6C454ED}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Filtter for country '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Filtter for Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#333333' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#f5eddc' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ddebf0' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' sizing-mode='fixed' />
      <datasources>
        <datasource caption='covid-data' name='federated.0dsscqg1vu7paa1h94muc19vwntl' />
      </datasources>
      <datasource-dependencies datasource='federated.0dsscqg1vu7paa1h94muc19vwntl'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='14' param='vert' w='98934' x='533' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6250' id='15' w='98934' x='533' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91750' id='7' param='horz' w='98934' x='533' y='7250'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='91750' id='5' w='88267' x='533' y='7250'>
                <zone h='45875' id='3' name='Country Vs Life Expectancy' w='44134' x='533' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='91750' id='10' name='Country Vs Diabetes Prevalence' w='44133' x='44667' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45875' id='12' name='Country Vs Total Death' w='44134' x='533' y='53125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='91750' id='6' is-fixed='true' param='vert' w='10667' x='88800' y='7250'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='91750' id='8' name='Country Vs Life Expectancy' param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' w='10667' x='88800' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Filtter for Country</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='19' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='18' param='vert' w='98934' x='533' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6250' id='15' w='98934' x='533' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='91750' id='8' mode='checkdropdown' name='Country Vs Life Expectancy' param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' w='10667' x='88800' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45875' id='3' is-fixed='true' name='Country Vs Life Expectancy' w='44134' x='533' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91750' id='10' is-fixed='true' name='Country Vs Diabetes Prevalence' w='44133' x='44667' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45875' id='12' is-fixed='true' name='Country Vs Total Death' w='44134' x='533' y='53125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5C770F9E-EDE2-425A-AFCF-350087804363}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 5 Countries with Maximum No. of Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:continent:nk]</field>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{468B66D0-BDB8-44C0-ACA7-8A83E3732942}' />
    </window>
    <window class='worksheet' name=' Total Cases per million versus Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_cases_per_million:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[mn:date:ok]</field>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[tmn:date:qk]</field>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B72BA6F-BBE8-46AB-A05A-006F06BFA65A}' />
    </window>
    <window class='worksheet' name='Country Vs Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:total_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:continent:nk]</field>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD203B7C-9D1A-4E55-A2E1-85A423EA306E}' />
    </window>
    <window class='worksheet' name='Country Vs Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71560F6C-2B31-49E1-8B44-FEA5E85A3A17}' />
    </window>
    <window class='worksheet' name='Country Vs Diabetes Prevalence'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:diabetes_prevalence:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[sum:diabetes_prevalence:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FC53D02-0FB2-4CA8-955B-8A81BE0DFB63}' />
    </window>
    <window class='worksheet' name='Country Vs Total Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dsscqg1vu7paa1h94muc19vwntl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20F32DE8-85A7-4E91-B445-952251C3F86B}' />
    </window>
    <window class='dashboard' maximized='true' name='Filtter for country '>
      <viewpoints>
        <viewpoint name='Country Vs Diabetes Prevalence'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country Vs Life Expectancy'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country Vs Total Death'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{290D28D0-84C8-4C76-8C54-CB94C2768557}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Total Cases per million versus Months' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country Vs Diabetes Prevalence' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country Vs Life Expectancy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country Vs Total Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9+ZNk2XXf93lL7pmVmZWZlVtV1r5Xb9XTPVvPYIaDAQiAkkzTlh1myGGJ
      Dims301LISkCf4NDP8pmOEBapEkQXIYAOANg9pnel9r3Lfd93zPf8w/ZldPV3dVdvQymCen7
      U2Xle/fdd/Pce88953vOEdLptLq2vkq/fwC32w1AqVRiZWWZCxcuIggCAPV6HZ1OB0A0GqVY
      LOJyubBarXz44a+4+HLn2mQiSSAwSC6XY319DZ1Oh8/nxdLTA4Cqqqiqyv7+PgMDA8iyTLVS
      oVAoMjIy2n3evVheXkar1aLT6XA4HA98/yKh3W6zsbGB2WwmEAiwtLTE+fPnkSTp194XVVWp
      VCqYTKZf+7OfBTt721gcRtrtNkJDg7vP/bU8p9VqIefzefpcffT39yOKIoqisLe/h8FoQKfT
      IQgCqqpy/fo1ensd+P1+rt+4jt/vY3llmaHBQfz+fjbW15memSYcCVOtVYlFY8QTCVqtFsVi
      AY1Gy9j4KFevXqfdbmEymWg2GkxMTpDL51BVAb1e/9COjo+Pc/36dUwmE319fd3/q6r60Anz
      TUJVVTKZDH6/H7PZTLlcxmg0fmP90Wq1CILwwo3TcUhn0uTKaWxeE5VCDbNs6C68zxuNRgM5
      k00jCiLr62sMDg4hyzKoKk6nk1gshtfrRRAEtFod+wd7BINBjAYDyUSSt9/+FvF4grnZU9y4
      cZ2tzW1kSYPH40ZVFPR6Pb29DkwmE4IgUMiXGAwMMjY2RqPRIJPJsLa2jsvZx9jY2LEdtVgs
      uFwu3G43sViMSqWCLMvE43GcTic6nQ632/2NrLL3Q5ZlpqamCAaD3QXlm4Qoit/o8x+HcrnM
      7sEOrWYLURIQdTA0FqDVbFFIlRk/M/Pcn6mqKoqikEqnkHVaHR6vG0EQWFtfY/7cPL29vdTr
      ddKpNIlEAq/Xi8vl4ubNGwiiyIULL3HnzgI6nQ5VVQHw+/sJh8NcunSJxaUF4vE4iUSKN954
      szOpHgKtVsvQ0BCXL19+5AQAmJ6eZmNjg52dHaampjAajQwPD2M2m6lUKiwsLNDX1/dCqEgu
      lwu73c7Ozg4ej+eb7s4Li0KhwHs//Vvm5qdweuzdyRo5iGHS9nBm9twT7VyVSoWdnR2Gh4cf
      qfY1Gg3+r//7PzE2PYz0T//pf/9Dt6ezeqbTaRSlo1a0Wk0UtTNL2u0W4+MTlMplABy9dhxO
      B729duLxBI16A7fbze7uLiMjI+RyedyePkZHR9jc3OoKgaIorK2tEY1GiEajRKMRbDYbOp2W
      3t7eR76sKIq4XC4mJibo7e3FYrGg1WoB0Gg0+Hw+NjY2UBQFs9l84kH7OlAul9Hr9RSLRc6c
      OfMPRv34dSISCbMT2eTU/AzmHhOiKBKLxKnmm8xOnMbd53mqHV2n02E2mx+68zWbTYKhILv7
      2zg8NiZmxhB2drfVeq2GwWigp6eHnZ1dREFEFAUCgwFUVSUajdNj6cFut7O1tUWpVGRvf58f
      /OB7/Pxnf0+73cZmtzE0NITf108kGsHrddNoNLh58xZ6vR6TyUw2k+Hc/NmuXtpsNtna2mZq
      chq73f7Mg6qqKisrK/T39z9zW8+CUChEtVrFYrFgtVrR6XTP5f1+U1AqlbixeJXxmZHOYtts
      kYpmCXiHH7sQPq7dRDLByPDIkf+rqsrC4h0UqYXZZsRoNCCInWfI5XKZO3cWGOjvp620MRqN
      TE5O0Gy2UFW1c1CQJGKxCK1Wi7Nnz1IsFmkrbVqtzmE2EBikx2rGbrcTCYep1+sIQudQ+9pr
      rwKdEzejw0fUIY1Gg8fjoV6vP+VQHsXhwH3Th2O/38/S0hL5fJ5YLIZOp+PixYsvvD7+68Du
      3i6RRBBfwIMgCDTqDaJ7SS6ef+WZx6dcLiMKR9uIxWLE4jEMvTKWHtsD94hajY5vvfktBFHE
      brMzMNDP7u4esWiMUDBMLptnZGSUQGCIQCAAgNlspt/fTzKR5tVXX0On05FMphAEAUVRMJnM
      FAoFms0m0WiUWq2GLMtd4Y/H47TbbQAWFxepVqvP9OL3YmRkhGAw+I0ePgVBQBRFHA4Hg4OD
      37hK9iIhl81isOgwWzo6+sbyNmdPzT+XxcHtdjM0NNT9vLOzw5//xZ+Dvoml5+G/gVCr1dSt
      rU08d1WWeDzBzPRsV79+FFRVZXt7G5/Px81bNzGbTPRYrbj73Fy+fBm73crBQYiBQD9ajYZI
      NIper6fZbGG3WzEajFRrdebPzT/zy9+LZDJJoVDA6XQ+13aftA/7+/vYbDbOnz//jfXjRcP7
      v/x7+kc9aDQaNpa3GO4fY2bm2Sw9+/v7BAKBI7t+OBzmb9/7W3r7bLz+9svHagQywMTEJDs7
      OxgMBk6fOnPi2ZjL5fB6vRgMBl6++DKSJFGr1TAYDLzzzjs0m01Onz5LIpFAVVX6+wNIkoTB
      YKDZbKKiYjQ8fxu5LMvf6AQol8toNBpEUTzit/gmcWit+yZVw0KhQKNVw2rrIZvOMeQfZXp6
      +pnb9fv9R9Rf6Bx4+/39hONBWq0WGo3moffK0NHFJycnT/xARVHIZDIkkgky6Y4aVCqVOAju
      o9VqqVVr6HR6DAY9w8Mj+Hw+2u02iqJ0O3Jch54HqtUqxWLxa2v/cVhdXaXVanHhwoUX5vD7
      TVuiFEVhdWMZ74CbRr3B0s01/tt/8nvPpV/3nisjkQilUhGPx8trr7/G7YVbj5Q1uVKpPNTT
      pqoqxWKRTCZDsVggEBjEarUCHb09m8uQyWQYDATY3tmmXCqh1Wrwej2oqkqr1SKf7whhMHhA
      NpdFaSs4HE70ej2xeAydVkehUMBisaDRahgeGn4uA+JwODg4OHjmdp4EqqqytLTE3Nwc58+f
      JxqN0mg0vnHBe1Gwur5KsVpgdmKKbDrL3MzcidTsJ0GlUqFcLtNWFDa210BSsbstj7xHDAaD
      hMPhB7441O9D4RD+fh+hUBDocF3i8RhWaw+/9VtvU280sJgtSJKEv98PdFabcDjC8NAwsVgM
      RW0zMNCPIAikUklW11YYGPATjoTosVpwe1yYTAYWFxeey0BotVpmZ2cJhULPpb3HoVqtcu3a
      NSqVCmtra8TjcarVKj13+U//FWDrsaHVaqiUqyQiaaanT6b3t1otbty+xu7eTvd/7XabDz/6
      kGaz2f3fxsY6S1u3MDglrF4D/lE3/iEPbu+jVVDRZDaSSidJJpPU63Wq1SrZbJZqtUqtXkVV
      FVZWVrFYelBVld3dXc6ePUcoGKZSqdButVleXqJUKh3ptE6nRxRFwpEQVquVYrFEoVDg5q1b
      XcfYyMgwKyurqKqKRqPBaDKQSqWeZFwfCkEQkGWZ8l3H3deNzi5ZxGQykU6nMZlMzM/Pf6Mc
      oBcJjUaD/eg2gZEBgnshhvtHkcSTObnK5TLZfIZKpYKqqpTLZfb29jh75gzVahVVVdnZ3aHV
      atHncSFJ0hPtuqLNZqNcLrO5tcH29iZ7e7tcuXKZcDiM2Wzm1Kk56rU6/f39NJtNcrkM6+tr
      eH1eVFWlr89FPJ7AZDaRTCRZWlxmf/+AocGhu/6AzoMymQw9PVZOn57Dau2sjD09PdisVoIH
      IW7fusPS4jK1Wq17kHkWtFotQqHQc2nrcchkMlgslruedIW9vb2v/Zn/kLC2uYp3wINOp6VW
      qTMwEDjRfYqicGvxBnqjnnKjwNb2Jlqtlq2dLTRaLRaLhWq1ysraEnZ7L41G8/GN3gcZVByO
      Xux2OxqNho8/+pTZuWmi0Si9vb0AXX6NRqNBrzfi9fkwmTqrm8FgYGh4EJ1Wj6XHQrPVZubu
      9ra+vt71HRiNRoqFIkajsXvmiMVid30CCkajgblTs+zt7SMIHW7Rs+CQCvzrwKlTp4hEIkQi
      EVwu13PZxX6joAro9FoajSbDA6MntjIWi0XsfVZc7o78HWyFGJPH8fm8d9V2le3dLWYmZzGb
      zexvb2MyG59sBwABt9vdPZB86603Ojz/nh4Khc4h1mQ2USwWEQSB6elpCvkiuVyu04AoorQV
      jEYjN2/eos/1lc7VbDaPdGZ9fYNoJNrxCtOJMajWqoQjIQ6CB+RyOcbHx1haWqJWq534JR6G
      Vqv1tVMiqtVq14vt8/mYnJykXq93J/1/RYfzU2t3VFFVVdDpHk55fxgKxQJG01fXazRaVFWl
      Vu/IRjqdQW/SIfUobO6uMTk4S3g39kT9E7lHRbiXN+50OcnfFXK73UYs1mlYkiSmpqao1Rqk
      0xk2NjZRFIVyuYyAQKPZuKc9uoQmm82KzW5jIDDQXQH6XH389m//Nm+++QY9FgsOh6PjHm82
      uHnzJolE4qk9urIs4/P5CIfDLC8vfy27QbPZ5MaNG121zWw2I8syNtuDLvf/UpHIxPEFOgEt
      oihSq53c618o5jEYDUBHHTLoTNxcuI5kUMlk0tg8JpwuBxqNhr4BBzv7W5SLVbbXd0/8DPE4
      GoLJZGL+/DmgI0zV6lcCJAgCQ4NDRMIRjEYTZ86cJRQK8sqrL5PNZrorvKzRdCkRWq2WyckJ
      MulsdwIYTUb0eh02m41XX3sVSZJoNBqkU2l++ctfcvnyF6ysLD+VHi/LMsVikUKhwM7OTncC
      qGqLy599xOeXb9J+bCttttf3jv02ly8wPT3N7du3uXbtGu12m4GBAT766KNvPA7gRYHb6eWT
      979gbWkDSZIo1QqPvUdVVeLxGKqm1ZWVVCKNxdiDxihh6TFjt/dSLdYxmDvqtCiK9AUcWJ0m
      GvWTnwWkf/fv/90PRfEYN/E9DoZisdQNmTz8zuv14vV62draYmg4gEajoV6vIYkyBoOBXnsv
      ly9fZmd7F6PRiMvlxOV60Dt7r5dSkiScTieyLDM8MsTCwiJ2u52enp4n0u0OKdKJRAKfz8fK
      ygrDw8MkV2+heCZplgpUM3EW98JU0hHuLK/TaFRZvHmDUq3BwsIdihWFfCJDs5bm2s01isU0
      m2sLVBsabt28zkE8g1ZUMRgMWCwWKpUKdruddrtNX1/fE9F5vwkC397eHteuXSOdTpNKpSgU
      Cs/ExnwYzCYztVqdzY1NRsaHQFRp19VH8qMUReHKrS8JjHylwhpNRjKpLEpLwea0kitkqVVq
      rCxsMDTWUTkFAQ42I+hNWuyOk+3C0h/8r3/ww2QyRb3Wifk97kdrt9usrKzi9/upVCpkMpmu
      Y6xUKlGtVjGbTUiSRCKR7FIAypUSs7PTXcvP/Th0momi2B14o8nI4GCAhYVFZEnm1q1bgIrF
      Ynmi8LhKpUI8HkeWZYxGI6qqYtC0OMiBNpOiLms5d2Gej376Hkabnf3NTbQmI1qNkalTpyil
      EjTrCqlUmJ2NTYy+Ib71+jRLH6/gP3eGUipKIh7D7+/4P/T6jul3Z2eHwcHBJ/J2/zqFPxqN
      8v7777O1tYWqqoTD4W6cdqFQwGg0PjcTriAI+Lw+ZE0ngi8WibO6tsrYyPix49NoNAiFQ/T2
      2brjIggCmUwWl81NQ6lhd9iwO630eZ3IGrmrvvf22TjYC+H1nyyOWPrX/9u//qEoiFSrNW7e
      uMlAYOChk8BgMKDX6wgFQ12BPXT0pFJJLD1mNBoNsiyzv7ePwWDAaDSi1xtYWlpicXGZ/n4/
      sizTbDbJZDIYDAYEQeCjDz9Gq9Vi6bEcEQS/38eVq9f4wQ++R7Va4WA/+ADp6VEolUqsra11
      wyYjkQhDk6dopA+oG3oYG+rHYNDj97iotWVee/kcmUKNqckxzCYDJpOJXocdo16DOzDK8GA/
      JoMJm9tLfG+NUq1Bo16jVqthMpmw2+3k83lMJhMez9MFdHxdqNfrhMNhms0mX375JWtra5w6
      dQpJkhgaGsLn82EwGBgeHubmzZsMDw8/N/q2IAi4+9z43P0EBobwuLxotVpu3L6Oz+N74Dkd
      9bWA0ao/8luX8zXMBgtNGmi1dyk1Ws2Ra0RRxO11nVhGhHg8qmq0Gmq1GqIoPnKFVVWVZDLJ
      zvYu3/nOdxEEgVAo1NF3BbW7yl+5fJVTp07j8XjuHnxqXL16hUqlgk6vx3zXYRSLxZmZnaFW
      rQICfX1OPN6jIYTRaIxsNsvmxibj4+M4nU4mJk7GW1pcXMTn87G4uIiiKDQaDV599dUT3XsS
      KIrCtWvXmJubw2g0UiqVWF9fZ2ZmBq/X+9ye8zzw4YcfcuPGjS4Zsa+vj9dff51kMoksyyQS
      CRqNBrFYjFdeeQWz2YzFYvnaMkpUKhW+vPEZDruTAd8gPZYeZFnuJmH47MtPGJk5utjF99Od
      yMCB58evkv7Nv/03PxRFsbt6P6yjGo0GVVW5euUae7v7mM1mRkdHSaVS3Lx5g0KhwOLiYocH
      L4k0my1u3bqF1+vFZDIhyzKDg0PUGw0cvXYSiSTr6xt897vfZXVlFb+/n2arSSwWx+M5Gtxu
      sZhptVpkszl2dnfxeLwnjrOtVqskEgkGBwfJZDrexHv54s8KQRDo7+/vRrhlMhk8Hs83HpF2
      L1RVZWFhgQ8++KAbn/D2228zMTGBLMuYTCaCwSCnTp1Cp9ORSqW4fuMa5UaR1dU1ZqZnn1g9
      U1WVWCyKxXI8D0ej0eBxebl15yaq3CSWjJCIJzAZzOh0Om7cuo7JYuxagQDKxSqqomC2PT8P
      u/Qv/sUf/DCdztButx7Q+2q1GosLy7TarU7webmMIApMT01TKBQIBoNMz0x27LtafffwOhDo
      p1Qqsbm5RaPRiRcWBIF8Lo+iKoyNj2K2mMnn87z55psUS0UMegO5bJZyqYLL5Twy6BaLhXq9
      TiFfQKfTMTg4eKIfxWq1kslkUFWV8fFxwuEwAwMDz23w7kU4HEan0z3XCfasyOfzbG5ucvny
      ZYaGhujv7/Cx6vV6lyper9dpNBrYbDaq1Sp7oR2+/3vfwR/wUioVuXbjGs1Wg0a9gbXHeqJx
      X9tYpSlXiYeTuFwPT2OjKArr6+v4ff1oTRIOlx2zzch+cI9auc7U5AzJZAqL/asdqFqsI4ka
      8vkchXQJFQW94dlSpohtpU2PpYdKpcOrqNc6gra3u8/O9h597j7qtTrBgxAGg5FGvdkJZtjY
      oNXurMz9/f3U6jVisTjRWAxVVZmZniaTyeB0Odjc2gQ654hD4t3AQD+oKnq9nnKpzPDwMKOj
      Y7RaTT7/7IsHTJ+tVotoNMrp0ycPMhcEgdnZWYaHh2k2mwwPDz/TYB0m9br3s6IohMNhTCbT
      M7f/PJFKpfiP//E/8tFHH9FoNHjzzTcZGhoim8vSaDTY3d1lZWWF/f397mQIhoK8+q0LXYPE
      8Nggl37rFfoCvTTlCktri91IvkMoivJARF+r1aSQLtF3N6FVIpng7372t+RyOSqVCsVikeu3
      r1KqFxAEqNe+Con19PeRq6fZ2tlkJDBG+CDa/U4VFMZGxtEKetq0SRxkyGZyzzRO0n/4D//+
      hxvr6xgMBrLZPLt7e/S53FQqVer1GnqDnlK5hChInD9/HqfTicPhwOVyIcsyS0tLxKIx5ufP
      43a7UVUFs7kzazOZDGNjo+zs7GC39xIMHjA9PYUgCFy9co2xsXGsVivJZBKbzYbNZqNWq7G/
      v0+9VsPpcnYPSHa7nUqlyq2bt5ibmzsx6UlVVT744AOy2Sw+n++Z4hAajQbLy8u43W5CoRDZ
      bJZ6vcOT6uvre2Goz+12m1u3bpFKpWg0GvT399+N3chw/vx52u025XKZ8fGOJebQmpdIxenz
      O7rvcXjAFAQBjVaD1iCxs7mLw+7sqsuqqvLFl58Tz0apVWvYbb24nH14+nxUq1VWN5dZWVtC
      lCS0Gh3xfJhYMoI30Eevy0ZLOBquKAgCZosJSSeyv3NAr9uGVtdhKWgNGkL7EVpinf5BL5VK
      mUathdX+aMrzoyD943/0j3/o8XhwOl0MDAxgMVtYXl4mnU5zcBDE7e5jbGyUaCxKKpVieHgE
      RVGo1Wrs7e0xOjZMvlAgnkggiUL3ECtJEn13VZ9Ws83yyjIGvR6Hs8PraLVaDA11guR1Oh0m
      k4mNjXWcLgehUBhBEJEkqWtpkiSJQGCAXC7Hz376M0RRPJGu3Ww22djYoFwu02g0nilCSxAE
      dnd3EQQBq9XK6OgoLpfra8tc9rT49NNP6evrI5/PUygUmJiYYGhoiInJCbRaLTabjXq9Trvd
      PhI1p9cZ2D/Yx+58uA1dFEXMNiPrG+toJB1mk/luCp02VreRRquG2hDQaDSEwiHytRQunwPf
      gAdRFmiqNdy+Pqz2nu7CdnzOKA1ag9yNHQbIZwv4+wLk8jksNhPxaAKjWY/Z8vQx1/LQ8CCp
      ZJJavcb+/h5mi5mR0SGuXL6G0+VgeHgIgFOn5lAUhTsLt5ElGYNBj06npaenB4ejl3yugNfX
      sXwcriAGg7772elwMBD4SmAHBvrZ29tjcnISu92Ooii02y20Wi0jwyP09vY+4DaXJIlXX30F
      WZbJF3IsLCxw+vTpR77g1tZW178xOjr6TA6nUCjEO++889wDOZ4nVFXl0qVLlEolotEo586d
      48zZMw9cp9frH8jGYbVaicf1NOqN7qp7PwRBIDDqZ39vC5PRhNlsptVuUk5XkFs6etw9LK0s
      oOuR6XXau/c8jpf/MJjMR8+kzVoLvV6PIHbUUIvVwv52EKvd2pW1J4VsNBoZHnlQdx0bG+GT
      Tz/j0qXXu7NVFEWGhga71xyu5i5XH+FQpEt5uB+WHjOZbObISimKIpV76BWiKGI0monFEpw7
      dw5JklhaWnpAYCVJ4pVXXubOnQU++OB9QqEQb7zxxrEWh3a7zYULF55ZPSmXy9hsthda+OEr
      Ptfnn3/+yIwUZpOZcO5oIJSiKNRaFbS6ToKEbDp3rOC6PE7iiRhm8xjNVgtktbvjK3KLXqfr
      ub2TqqpUyhVMWisHwX1cvo7cef1u3F7XM/kruvvPof31EINDg/Qur9BsNh+7xZvNJt5489Kx
      31utVmZmpjtBNrUaxUIRRVEZvi+B0cTERPfvfD6HRit3X05VVUqlEvlcHp/fx+zsDKIgsra2
      xieffMz3vvf9hw6Ey+VidXX1mTIPqKpKJBJhfv7x2SuOCz5vtVpPHKzxpCgkQ3x5e5V0rsLk
      SD8ul4tsLnvkGqXdIhpP4Pf5qN63w7bbbbg7hBqNhmgwTrVUp8/nwGi6bzVutjDqTCiKwsTY
      BCu7CwQTuzSCDbz9zyebs6qq/PSv3sfrc6OV9JyaOUOqGEOSvurLszrruhPgfquLTqfj0uuv
      nejQeJIfNRgMUa3USKWTpFMZfvCDHxzLmiyVSkRjUdzuzuojiiLtdpt0OsO1q9cZHArgdDiY
      mp6kWCyi1eqOHYh8Pv9UmQdarRYHBwcMDw+zsbHByMjIYwdbVVU+/fRT9Ho9Fy5cQFEU8vk8
      oiiyvLyMIAhMTEx8bdkqCqkE1ZbE3voNNFqZ9977Od9+9y02lm6xH8sxMuBhLxihp7eHzbV1
      UqUm+VSEfEPme+++08lk0Za7u+706QlC23G0bTPRvRhICn0+F6lEBqNsoa1tcWPxCvVyC9+I
      C/1TqiHHQRAELr72EgfbIWwOG6HEHv6h5+tglP7wD//3Y8lwJrPpAeE+3GLv/f9xE+DatetA
      x5l16CjKZnLodDpeeumlY+9rtVpkspmuWnM4OZeXl+n392M2mQmGguh0OlZXV3nr7beP5a6I
      okg8Hu+S6U4yWRuNBslkko2NDoPx9OnTj3TqHGJvb4+lpSUMBgPJZJIrV650E7bOzMxgsVgI
      BoNd7tDzhqQ3obYqbOwmaWQPGBkfoazq2Fm5ic7cS6XR4ML8GfbXbvPzj6+j08r4+/txOaz0
      Ot1IooCiqORLWcyWjgPT2msmlypw7vR5nLY+0rEcA55Bsrk0iqaOy+NEb9aiN+i/lt3NZDbi
      G/DQ02umx/b01p7jICRTCVWSTr6NPMlLtlotFu4sfsUbEmB//4ALL104kssFOg6ZpaUlent7
      yedzNJoNxsfHjlyTSqVZX9vgO9/5Dn/zN399l5Hqe2QBClVVuXPnDv39/UiS9NhVXFEUrl69
      yujoKD09PbhcJ+OV7CyssldIo7s70ZvNJi+dnSJb1DMwYOs+N5/PAzDod7IVLjE2+PyKP1QK
      af7TH/2IC699i0L8gLGpMWotPQaxykYwzanJALcXN0ilkgy6e+kbniWXDOH3+7H0WBEFgaXl
      JQanvd3xrNcbNHIqw0PDSJKEJEmEQiHqUvGIl/YfKh5ug3oE7tVx71eb7hcUWZY5feYUpVKZ
      TDqLTqvhtddeIRqNYTAYjqQy39zaxOf3IooCjaaegGugm2LwkFvvdDoImgzcuXOH11+/xM2b
      N5ifn38k6UwQBCYnJ9nY2CCdTnP27Nljr1cUhcuXL/Pqq68+cVBLNpHC5TPy4z9/D3tPD1qd
      llCij1bdRnDrMnWtC00zSyiaZnzIzdqqhM45/VwnwNrWPj5/P363g1a9hN3h7f4mL/d1dp3T
      p2ZoNpqMjIxQqVT4q2ufMz09072u2WyiKircHSKNRiZXzXHt+jUUsYnH6ScwEODK7U3Gpl4c
      x9/T4qlPEA8LUnnY/w4DU9xuN0aj8W5NgEHSmVQ3ygyg3WrRaNS5ffsOt27d4a//6m+6ybTu
      xZkzpymWCiwvL/P97//gWDvyvZAkiTt37rC3t/fIQJVGo/FM6Uwy2RL//F/+S8rFIt5+P1pZ
      Qm1lyJRkwgf76Cx2zKIWo72PCxfPIx+jej4NFEVhf3+fycnJjuVHffhufe9BPBQK8e1vf/vI
      dUODQ0TDX/0ugiBQqZcZGRlBlmUi6QPurN1Eq3vitfOFxHN/i3snwdrqGlqtDp/PR7VaQ5I7
      y8rqyioarZbdnV0ajRkCgQBer49MJsNb33obrVbL7u4uCwuLzM7OoNVqu4IriiIzMzP8+C/+
      kpdeeqnrxXwUNBoNgUCAmZmZR04YRVG6YZlPivFzcxhtZn71wS+ZmJ2hXm3i9dqSTqQAACAA
      SURBVA+ieiQQ6gxqB3D2Wnn1pZcwmHTcurPM7OTsEz/nYWi1Wt0EBFarldW11e5Y349wOMz8
      uXl2dnboVP45ata1Wq0cxPa6nwVBYGiin0gwSF+vl3w1hec5WXleBHwt07jZbPLRhx8zPT3D
      3NxcJ2va8hLlcplatcrw8AiNRrObP7PVahGPx8nn80xMTHR4KMOdpFoff/QJ3373HfL5PB/+
      6iPm588xODRIs9lgY2ODCxcuPLY/giAwNjbWKbr2COGOxWJPncm5x9Fx+rzz7ruUy2UqlQrh
      cBiNRoPT7WNgYODIznLxBP0+CfL5PH/8x3+MLMs4HA4ajUaX6Xkvmo06H3/8Cf2DI2xubFIs
      FRkbG6NZryFo9Mh3dYFWq4WqKnd5Tm0UVUAjS3gGXNSqddz2FyPX6fOCkEolVPExh+B79f1D
      S8qjVIlqtUomncHn6++mVoFO3kZJkpBlmXQ6zeDgYLfM0s7uDv3+fnQ6HYqidAX1ytUrWK0W
      nE4ny8srZNJZDEY92UyO3/3d38VgONlBrNlscu3aNWZnH77qttttlpeXOX/+/LNHQ6ltcrkC
      Gp0BnVY+kZoGdAVOlkRApdlso9E8/N5Wq0WtVuMnP/kJsizz1ltvodVqWVlZYe7U3JFr8/k8
      24uXCaluzg27+eTjz3j79Xmi2Rq97TyG6Zc4WLjO2OwZ8pEDUlUVSUgTiUUYmX2F4cBvbpC/
      9If/xx/+8H5P6+MOt48KUm+1Wvz8Z3/P1NTMA7z9wwCL9Y012u0WfX1u6vV6h++fyZJOp7rs
      wt3dXdxuNy6Xi8XFJXK5HHNzsxgNBgYHh4lEIl0y14leVJJQFOVIgt57cXBwgN1ufz41vQoH
      /D/v38LnshPbW6cmGBFqWdb3Exh0ErFIjGY1x34sT69Z5tqtZXw+Dxt3viBaMhDZuo3eZubm
      5+u0G0lSZQVRqbK8vE6fx8PCjct8cXuVv/zTHyHoLLz15utYrdaOyTcRPxK7DR2Vc25sgGvL
      O+i1MrKkp1Yu4dApFBoKGqOBcChEMHxAs6ZBKefYiR5w4eU5Wm09Nuvzte8/Db4uB6KMqiLL
      GhSls+3dT3eFowL/MOvPvdddu3adt956+9jcOIIg0GOxdpmZ6+vrCIJAW2kTCPSTSqVJJpMM
      Dga4eesmc7NzvPvuuyiKwvb2NvV6gzt37vD2I2z/xyEQCPDzn/+cixcvPrAqO53O51apBqBc
      LFCrVoknU1xb3UPfLlJvqIQG+jl95iKLS9dx6gX+/NZ1dO0Sv8DA6q9+wZvfs7MXLdI3WAFV
      IRZLsLS1xNi4l/GAg4/f/5ihc+f47I//HbTht3779BHHmkbWPEAfsdls9Hn8vHrJyakBO3/9
      3oc4XH2YtQotsU6jXEbWGjHpFBw9DnaDccZGPCwsbjNx6sILUe3y68rwJ/3buxFhwDO/ZLPZ
      RBIlJiYmHzlje3t7j6zChy57vV6HxWLG6XSi1WqRJJG9vT28Xh+CIOBwOHC7PTgcDq5cucL4
      +PgT9e8w60S5XH5A18/lcjidzmNrFT8RmmUU2xBzA1aWljfRmIx47T309A3gcPYyOTJEcHuN
      eEFhsN+FojFx4expDFIDo62feiVFWxSRGyqJfApZ0OMf9uPptVCrqaxurtJoNDgzNUm2Umdi
      9CtzpKqqFIqFruNOURRSyRT9wxP0O3sQRYlGvcT4xDhmuxOn24Ojt5eRoQAD/gCZfJzpc+N4
      BwIMjwzTY9Z11d5fR5rJXzeETDalSpL00JX/SREORxgdGTuxXn6IdrvNZ599xvTMVFfnPRzw
      WCxOKpnC4XAyPT3dnVj1er0bivgkUFWV27dvdxOrjo6OYjAYODg4YHZ29oWr43WYdPfefqVS
      Kf7sz/6MqakpzGbzkdoO0Wgn817/QId5qygK8Vi8O3alUont7W0GBwePPEdVVfYOdjE7dPTY
      Ol7zdrv9SL/PbwLEdlt5LsKvqioCwhMLP3QGt6/PhXJfPwRBwOv1MDo2gtFk5MaNG93vbty4
      cSQ99pM8a2Jigvn5eebm5lhYWKDRaKAoygsn/K1Wiz/5kz95YJIbjUYSiQS1Wu2BEEyTyQT3
      XH74TiurK+zs7LC7u8sXX3zB5mYnSq9UKrG0tMTu7i5Li0tIstTVBO597m+i8MPd1IiHh8PD
      c8C9n7d3tk7UkKIoSCe0dhzikGUpCAJOp4vkPUllD8MPOyzQMqqicuZMh9der9cplgpPXQTD
      ZDKh1+vp6elhamqKH//4x19b9oNngaqqD+VMHToU7w3GORzLWCz2QFUar89LPp/v5lv97ne/
      y+7uLpubm6iqyvz8PGNjY7z00kvcvHyHYqH0UCfkbyLkD3/1C4otPWahSL6kcun1OX763t8z
      /+Y7hDY3QKenlonx+Z0Q//wP/keOs7mIovhUq4TL1eGNhyNh/H7fQ6+x2axsb+12Y26DwSDD
      w0Osr68xNDR0YjPj/RAEgUAgwL/6V//qhQlnPNyJotEo5XKZs2fPPvS63t7eI2WgMpkMy8vL
      +Hy+ByZzvd7JzPb7v//7yHKH7el2u1lYWCAcDpPNZqnValTaBV596+JvrLrzMIiu/kFqxSwO
      b4BTo4OEIlFGhv1EY1Gc/lF6jFqi6QLmRoPH5WuuVassLy+deOUQhE74XKFQoN1qIh/jvUyn
      M+wf7LG9vd2pZbC5gcPhYGhokOXlp8sden8/XgS0223a7TaxWIxPP/sUo9F47OS+ePFiNyS0
      WCySzWbx+/30WHuO0B0ikQi3bt3inXfe6XKgEokEP/rRj+7WhJ4kEAgQiYTxDXhfmLH4dUG4
      fuO62mO3Y9Rp7hKDWoSiaTw+L5loCIO9D2p5ak0NvoCHx+U6SySS9LncT1QcTlVVVldXMZkN
      j+ThrK+to6oqE5MTiKJIKpni008/45/9s//5ay269+tAu93mP//pf2ZqcgpFaCEJMufOHl8/
      t1arcf36dczmTh6dqakpUqkUCwsLzJ//KnBnfX2d8bFx7HY7xWIRq9XKlStX0Ol0FItFJEli
      YmKCO3fu4ArYcPY5Hvq8Q/ym7Q5PTId+nE1YVVVi0cQRi82jUCgUuikSl5YWGRw6eW59RVHY
      290jFovzgx/8zonve9FQq9VIJBK89957GE0G/AM+dFo9RqOR2em5Yw0Lh3lVNRoNwWCQdrtN
      MplkbHyse83q6irz5+b51c/+EtPIBd48Pcby8nIncP0gxNjEGKFQiEw2jWvARuAJxv83AU9N
      h34UUqkkt+/UkCUZi6XnkYmsms1m1/usKJ0f9KQ6vSiKDA4Nsru7R7vdfqFycT4JDgPU5+bm
      uH7jGt/5/rvIskRoP9whq9UL/PSjy4xNzjEx9NU5SRA6tdDee+89isUic3NzWK1WGo1Gl+RW
      zOWIplK4ey1kFJFiIc0Hf/c3aHt9BDeX0cnvIDtGSW3uUmikSId3WdrL8/v/0z/mOZJVX1g8
      sd3vcRNAEAROnZ5jaGiQ/gE/Or2GtfW1Y++r1Wr80R/9Ec1mE1mWn9jyUK/XWVhYfOaKMt80
      hoeHO2WkiiXK5TLhUAS91tiZ1NUUGt8Muf1ldg4O+OUH7xM8OOD9D97ny+uLfPT+L4jG4nz4
      q19hMOj58V/8fxyEovzqF7/gyqdXaApN+kenqZQKLC8skFcMJBJJBgJDSHor65+9x5lX3ySX
      L5PO1BBaRZTfHC3nkXhkSOTzgCzLiGInn44oig9YKLLZLPl8nrNnz3JwsE+f+8nYhhqNBpfL
      xfr6BmNjY4+/4QWFKIqUy2WuXr3acXwJAoIoYLfa0bRL7BZkeoU8t9c20WslWjWBwMwcqdAm
      ZouXllrBqJb4+Ooa1UqGeDCC1TPGmzP9fLQW5I0LL9HMJynUYCzg41vfusTYkJ8mWuqtNkK7
      jt/lJRWP4wkMMRDw/BdxIH7iM8CzIJfLUSgUEUURSZK7xfSSySSJRIJeh+2pqQgffvgRWq2O
      S69fwmo9WQ7LFwXlcpmPP/4Yo8lAo96kx27G1mvDZrOSSeSZGfLw4w8uMzo6wYBN4sbqLtPj
      U5gddsrZBB9+/AnpbIF2rYTRYken1xLo92N1eBl12hGsGnJFEZ/Twvvvv4/BpGd0eAy73d71
      jM/MTHd9CsvLywTuCYt8UhyO/bMcltutNqsLGwiKhN6ow+Xvpcf6AsQEPy8c7B9w5sw5ms0m
      H3/8Iefmzz2TJ7aTra7OzZs3GR0ZZWbm+QSbfN0oFAqsrKywvbPF+Yvn2NncRxAE9AYds6en
      iYZjDAVGsPY8PPBHURR+9Mc/QqfXIYsyOr0OSZR4/fXXMRqNRCIRMtk0uWyOeqNBpVHA6/eQ
      iRd47ZXX71bpbB0J1A8GgwjGFr3O3oc+83F4WktRqVgmEowio0USZIaHR9DpdLTbba7fuczU
      3AQ6fWeSlktlioUSHp/7mSba164CHYdcPo/b3SkikUqlcDofbX67Hw/LTNEp42ogEU9itVqf
      ipbx64SqqvzkJz9hcHCQgf4BwsEoI6MjuJwuNBoNitrC1edkeWmVwEDgAWpCu90mkUjQarUY
      nxhF1sg4HL04+xz88he/pFGvY7VZ6etz4XK56HXYWV9aIHkQRuseY2flDpIkEI3ncLvs1Jtt
      RKGTxHh9bQujSYesESlX6mjvVmGBJ/ObPC4Th6qo3Lq8QDqeRy8Z8bkHGOgPdHPPHt6fzxQ5
      2A0TOghSrzUoZxrkC3lcHucz7fZHEmN1O3WCGXUYsA48FZeoVquxtraK3d6L0Wh64pSFx/Wx
      r8+FIMDVq1f49rfffSEsQ61igkjdiCabxD4+TEfJa5NJdQrG1ev1boUWSZLY3Fyn0W5jLGsw
      SA0SmQLBeJaAp7Mi12o1PvvsUzRaLa1mHUWSMFvMOO+pvzY+Mcro2EjXPyLJEia5k+pEaIFF
      rPBnP/sZr737O7gsZpaufcovruzy2muTmCwedrf22b+zTu90D6VWD999qxPBdu8kOIlB5P6/
      H7hHgHgswTtvv/vI8NbZ2VkURWF3dxeHw4HNZqNUKhHcOSAw2v/Uu84D9sYnaURRlKcWsL4+
      F9tbnYIXRqOBSqXy3Pg4LpeL5eXVZ+rf80SrnCZaBP1+iFS9SDwZwzcwTiNVYPXWVWRRJRQM
      0pa0SPU8C4tr/P6//F9YuvEFu3tR5qe9fHnrMl/kCvQNjCIUw/zpX/2c3/vdf8LewR6eoRFu
      fPE5Lb0Nu6ZJMJKkVK0iWjxM9R9VY7R6AzaHhv2DFDOn53np9BT7uyES+SoTfU4w2Zg/NcXS
      4ieogoDD3U/0yyUqykuY5QdV1IcJ9kkXMkEQKBXLjA6PP3S3vl8WRVFkdHS0+9lsNqNNGSiX
      ykdyWD2JDD9W6T5uCzskqj0tk9Rut+Pzdw5a+/v7T9XGcWi323jc7heGzCVpddQqZapKi0a1
      xWtvv0ktmySTqdHWGhn32fji5hI6oUlL78De14sgiqiSBpNGRRIVsrkCvpHTmCWVjYMYv/v9
      b3H79iJvf+fbGMQS6L1olQZtycCQ38f8xXPEk5kH+vLqq5cYm73I6y+fZnwkQDgUwmLWMTE1
      zaXvvcX5iUn29vYY8I5x8Y03aeXafPufvItJelAG7l/h75eVSrlCMp4incwcm0Vk5c46o6Oj
      R4Lz76/D8CgEAoOE92JPdM+96J4B7t9CTpr97VlgNptZ31gHgW49sWdBs9lkZ2ePaCRGMBRk
      cDDwQpwDJL2VQmgNyeFj2OfGaDKi0+jodTrwe+xg8TDZ72Jg/DQ2uUY8VycZi+If8DM9M046
      V6WQTuP3+omG9wgd7LC8scfFV18ml0zhH5xE286gt3vwu530WK2Ikkgpm6bfd5Tfo9Fq0et0
      yLJMJpvlpZfmcbqcVGt18vkcqVSKVrvNSxdeunsuE4jForjcJ9O1D2Uom84RD6YR21qEtkRw
      P4SslZA1MpGDKJlUDpPZSK/TztrKGv2+gaeSMUEQqFUbhCMhKuUqBpOeUrGMXn98PtvD5AiC
      IHxlBXrYBHjUC36TKBaLlMsV9HodrWYLm91GqVQmnUpz7tw8t+/cptlscvbM2ecT4fVrRKlU
      4vLVLzGajMiSTKVUwev1otFoiaUilIplXDYLmVILrawyM3s06W+5VCYYDKGRtciSTKGYx2q1
      Mjj44CH6zq2bDE9MI7datDUSOq0ereYrlVEQBJR2g+XVLWRDG61Oh9fvPnahUlWVUrFENp1D
      rUtMjH8VGdhut7ly5Qo9VgvDQyO0Wi1293dQFAW71c7Q0PBTL7Id+k2MWr1GW2kjSxKyGRyu
      o+pfq9Vid+MArainUi1jdVoebQZ9kmD44/A8bML3IngQwul0oqrwxRdfMDExgdlsxmg04na7
      SSaTbG9vsrm5xdtv/xYWi+WJiHnfJCqVCpFIBJfLhVarpVKp0Gw20Rv07Oxt0+d1otVpuX3j
      Do1qE1kjc+HiS0fa2NneweV0dw+UuVyOXDZHoZhndHSkWy95Y32DAXcPi+EirlKRYq+ZXmMP
      sl4kvhuhb8DL9tYOp8+eplZpsL+1SKGlRasUKLbh9TcvYLhnlT38fVdvb6KVdXg9viOZ/+5H
      Np3EYLYQT2QYHHg4DT4eS+D29JGIxenzfBXor7YblOtgNj48Vb2qqiwuLmBxGVDaCn1eF/Fo
      klKqyulTZ7rnwr39PYTrd66o1VqFjpwKgIqqwleyf8xOQCcC7BClcgmT3sLs1FH7u6IoxGJx
      7HbbM6kjzWaTvd192oqC6e6PaLXaiMWiOJ0uxsbGUFWVTz79hOnpSZLJFFubW+j0er7z7nde
      uGivR0FVVarVKuvr66TzKaw2KwOD/iPvkMvmiEXitFsKY6Oj3fTl7bbC5sYmY6PjRCIR7HY7
      zWaTcCjcTUkDKrl8nvOnRrmxncJRKVK16rh6dZX/4b97kzu3c4z4RBaWl+nxBdBiAkoIkkx0
      d5t8vsjsG68wNdZ/pM+KorC/FmF6qrMrPWpF31i+wV4kx7kLL7O/dgvZ7EbTypFIFbCYdcgW
      D1SLaExG8rEQ1abK2NQYG1sHDLlEPrie4/d++wzLq1ucmhzmy+UDBvr9nJsZ6/YnkUiwtr6K
      KAmMDU/g9T5I95aLgR0KUvxoh9WOgMO94i8cNxe6KMRVQisr2FUfQ64xTCYzl7+8gtPpQhBE
      ioXikbpfJ4WqqqysrGE2m/D6vJ0ibPkCZrOZV175qu5vMBhEEDr0C5/Pi8/n5W/++m/Z2to6
      UnvgRYaqqnz8yUfYnFYUUWFg0I+998EdzGa3YbPb2FjbPFLNRRQFZFliaXERv99PLBpDURTm
      5uZIpzsZNwqFAgOD/bQlA+1cmOuxIn02I6cnBwhF8gwNemlVI+hNPdh6rOgkA5KoR0XAMj7C
      nbU9bFbzkT4D1Gp1FOUJzNmqQr1aJJ0ukQ0nefX0JCaHh/WFZbLhRXqUGraxc5isTuacRoIt
      MMgCOouNs2eGyCaTVAtJ9jcFArOvoCQ3uk13LExFxkbHOrvofarwocovSxoRjfbJTIWHN9+v
      U5oDQKBFs7nHtZ0NeoMTjI2PY7FYMJvM7O/vU65UumWXTor9/QMEAYaHh6jVaoSC4bt5gjrl
      kTKZzN0Iqc6k2NneJRqLopFlkskki4uLjI+P/4OgRwiCgM/rJ51LYu21YrPbjiQKuxetVotE
      LEE5X0Gn12E0GqjV6tQqNS5evAhwt/h1nMXFRQYHB5mdnSWVShGJhCkWitgcHgLDk+SyWfz+
      fmLxGP0TNsBGYOLBoiIHBwLjU9DX24nbuFe1NRoNyAZYWV1memrmkePt8gQYHD9NOHRAT48Z
      z9AQ4XAQi93Z/exxOGjWKoj6XnRGDb3VOllRoscxDMEFjP0u7H0D+Px+pB4ZVT5aO6BcLjM6
      1imLFQqFiMViTE1NIYoiBwf7+PoHED4p/Zla0iae5rc61nlWy7So37QzNzhPuLFJPdvme5f+
      G5ZXOhUlL7588pJFiqLwxRdfku3dRmnC78z9PqIosrqyhs/nZ2hoiGw2Szgc4tSpr+qFbW9v
      k0gkiCfiBAYCJ6ru8iKhVqvx+RefM31m4shB8tAB2W63CR9ECPgG0ev1fP75F4hip5rj6Mgo
      druddDrN2toaly690W1XVVWWlhYfmj2uWCiRy+eYmBwnFo3h9ri7/KDO90UWFxcZngowNBro
      tnc/ErEkmraRdrtNPBZHkiUmJyefPePeCRAKhUilUsiyjN1uO0LxyGaz1Kodp+OnH/wE58Sb
      z5Yb9DjvrbZHQno9x1bzV2gtImJT5f+9+X+iMYokcmWMywamp6ZPxPsXRRGDQ0Kcl8lu1rvP
      7Omx8NOf/h12ey9DQ0Nsb2/h9fq6SaJGRkYYHR2l2Wz+g1j574der+e1V1/jiyufc3q+k1/1
      Xqeeqqqsr27QqrWJRCMYjQam5jqZoZeXVtjY2Ly77Qvs7e1hNptJpVIUS0WmpiYfeJ7VamV1
      ZY1mq8nmxhYCAsnkEkajkWQyxeuvvY6nz0s0Ee4K/7F9N+hZu7XBG5feZG52rpvp73lMgMel
      5sxlc5x9SFHAw3dMp3YBMPUNU4osPb/kuPeaUUVZQJQluHvmbVUVrOlB/FKAivtjSu0cuzv7
      eDx99Fh7HlhFms1mN0NFNpchqdvBJgoYXRJrG2v02hysrq7h9XoZHBpkZWWVsbGxIzn9D4X+
      H1KoZDm5z/tX1/B6/bwyfzcSTBGoVqtf6bCqSjqbw9FrZ/7iWUr5Mpe+9VqXN5PNZNFrDexs
      7iFKEufn59nc3kYWFcxmDz0Wy7FnsFw+h81q5fz8eQwGAx9/8jEej4dcNsfGxgapXJq5+aNn
      qfvN57lMnnQ4z/e/94O7qsYBoVCIYDBIqVxidHSUSCRCoVBAo9EwMjLyxL/R/cJ/WD8uGo1S
      qz8YF3IoC5VKhXK5TLFYxGwy0VIbzzc79HEmz9RqjUujs3we/jv8bxioricZ8VwiGotitVm7
      16uqym5oh7XWF7RpgqCit8vYRrVUMk0qsRaUohh0Jqamp4hEIuh1er77ne8+U/3fFwX1coZ8
      pY2+UOD65x8Rz1WIZrIk8lnGB+2s7cTxDo7QrJfJRg+4cmebH3z3HbZWFggl8gy6erm1tcOb
      r71NOBgmV2swMjxMKrJNpfH/c/eez5Hk6Z3fJzPLe+9QBaCAgmmggfbTPWZ3Zj13yd3j6ZYi
      qYsLxUXoQtKfIAUjtC/04oIKhkLuXuh0okK6IHm3dEuz5LpxPaanLdDwvgCU995Xpl5Uo7ox
      baZndmZ29r5vZhpVlZWZlT/zPM/3+X5lDLYOoy4Dd5buY1J1GZ09T+l4C8kVRqmV0BqtZJMJ
      /vLv/4EXZicoF4vsbiwxsfAlSqU0nUaR13/89wgmJ9cuTLG0vM385at4HYbhb1jKVvjSK18G
      4P3336fT7bCwsEC1NvCIWF1ZJRKJMDY6hizL7O/v43K7nkvmHp6eTl+5f59Lly8hio/Hsyef
      MZvNhCfGKVfKyL0eOosT6V/+97/zg45U/yS/F/B8FWJ124hDFaB75hhBhPKWTLesoNfqMZvN
      RA+ixGJx9vf22dd+gHtRh9GjxuhRozVLNNMyhsNRXhz5DlfOXWN3ZwdRELl29UX8/sdlQH7d
      IMsy0cMo9VIWrWucevqIhiwwG7Syly6jlVtIJj1TZ+Yp5YqUKiUK6QRHhxl6ikwlk2d3Zwer
      xcOlV19k7Z1/4MyXf4d2/ginywVqLf/ku99k9fZtjtNZ/P5xokfHTIVHOYjlGLUL/MVPbtJp
      FLl44SUMOplyo8uLl8/S1XupRu8xdfXbCJ0KLtcIrWaTVDxOOZtCsPrwux7y9KvVGjqVAYPB
      MCD3iRImk4mRkRH0ej3pTJrxsfHhVsbhcHB8fEy316VSqdBqtT727ykIAvV6HY/H81RlkRNo
      tVqsVgsutwudXvfLD4CTE3gW1AUbk86zRFv3URskdCMK2e0qU8FZKpUK791+l+5Yir6thnVa
      RHyEdyLLCu6jc3zl8m9gMVseiGi5CAaDX3jP3ueBoii88951DFYtPaXHxtoSFpcTkw52k0X0
      NKj3RIL+gdJGtVAm6A3RrjdweUf47e9+D5NOhaIxodOpGQ+PYvcEOF6/w9VXv0kxl2Fjaxed
      Ro9GZ4JOHdfIKF63k/mpCTKZHJ7wAhGfifDUPOpujjtbSb73rde4vxHlhcsX0BmtTI56MRpM
      +HwBJkJjlLJFynUFq0GPQB+Fgbt7t9PFYXGj0w2a+o+OjlAUZSh8kE6n8fv8dLvdYR+3w+Gg
      3Wqj12qo1R8WAx+9R9lsFpRBoe8klsnn8uQLeWDAO7LZbc9Ffnx0e/yxs0CPLkGPBsFPCtJO
      vqy7a+Cc+Svc0f41OquKeraLZnkMp8XLTmwd3UIdS+TJHrqdep9g9CUunnu6q+SvMxRF4c23
      3sDps6NWq4bm4yevARQLJer1OqViGQkVr335K6eOsbyyRKfdwWF30pXbOF0O8tkCdqsDi2XQ
      JH/nzh0ajQZarZZGo4HX62V2dhYYpErX19c5e/YsKvp0RR0uh5VatUq1VkUSJTwez2NZv9XV
      VUKhEMlkEoDjVJTZhSkKqQrn5i8M44Pr16+jN+gfBNRZJicmWVlZweFwYLUOlMIVRSF5sEa0
      oiJ2dMhv/+bXKBeyNGp14tkS+1sbjIUnMFvtBLxO9jdXUYxuLGKLZLXDz3/6E/7lf/WvaBeS
      WP0TqLpFEvkmF8+fReDpk/RwBVBkmXq1De0efVFEkgZV4Uq2jtb4cKaV5YGWaKfWpC+J9JtN
      1m8cYvaY0WpUpwbFyX9lbZvj2g56zyD4aub6NPN9ZF8Jw+U6Bu/jD3+r3KV80KO9rSV9WGT+
      zNkvBLX504YgCFTKFVSimvhxAqvjYZB6MgD0Bj1anZZ+T2ZyPHJK2VpRFAqFIjqt7kGxTyAa
      PcDhdNBo1okeHDI+Ps7k5CSVSgVFUThz5gxra2u0Wi2y2SzvvfceixcWbnauZwAAIABJREFU
      B7O1IKESBQ4Po1TrFQRJoN6oc3R0RL8vYzAYaLfbNJtNdnd3yGSzqFQqisUi1XKd2GEcURIR
      FBGbzYYgCJhMJsLhMIVCgZ2dHVrNFpcvX8Zms7Gzs0On08Fms1HJxtg5SnJldoQ33n6bvqDm
      res3SR7ucubCOXrNHtCnXKkxHQlR74jsrN2lL2qYmp3myvwka5u7rO8fQr+D0wCiNYhe/fSJ
      8+EA6LTZ3cghFmpUZYWjezG6gho6Hd76k5toHRaK0TS1JvSrdVbf2MU1N8bB9R3GLoVpJfL8
      7C9W8IxY2Lp1CO0mP//LVfxjDvaXjjAHtWzdiGJwWbF6NegnekjODqLq8ZPrNvok/1oiYrjA
      N178LS5fvPKf5MN/gnw+jz/gJ1/M4vG5T2U5RFGk3W5TyTdYnD/3mF9xv99ndf0+Wq0Wn9eH
      wWAg4Bthe2ube/duU6/XWN3YwiCJ5Ioldnd2MNvs9DtNyrUGjXKeSqvP3uYqnR5UqmWcLgd2
      px2zxYxWq8VgNGC1Wen2ukSPohRLBWqNOpNTk7g9bo6PY3g9g9bEK5dfIOAbIZ1O0263sdls
      aLVa2u02er2e8Hj4FCXB4/EM1bnNJj0Go4u+3k5sb4tet0Orr8agVUgkkuzsx5kOGMh19bz5
      03+k1ukw6nOhNjuxqXuUam1K5Qoqg5GQ34PJoEVrdvEsP7+HLz2gPyhAu9rANemnmipSqnQI
      nQvi92p443oSS6CNwagictY9aMV7JczG9S2MfjdTV8aQGw26pTIZk4GpK+MkVw5otCARLdKX
      odXoYDY/+Yz6PZnUchWdRc13v/17BP1fTJGmRqPxqRV1Tjg0lUoFSSUNvXgffT2fLnLu7AXq
      9Tpb21u4Xe6hvLkkSdhs9lOpTUEQuHL5HJsrOzTbGcbPXOFnv7iD3dJkZ28PDXB3ZxeXw4Hf
      48FAhf1ik666xu9//dXhKn4ikHwCjVbD6Gjo1PkLgoBGq2Fra5N2u0NoNESr1UKW5aFTjSAI
      dLtder3e8JpOCnqKogxTuKLOzozfTrdeID05j5oOjcYR/Y5ALVfht377n7Fx611e/eYlXn1h
      Hq1W+9jOYW7u8er1szC8a6JWg9RsECu2cXtMGExqzA4DFo8Ji0lFMtXCF7Ti9NvQq2RisQYa
      CQqxIoqkxuQw0M6XqdX7qE0GLA4D7WwJa8iNpFbjdBsRBIV+78kNNIqiUDluU4l18BTmCXiD
      T3zfFwEneetqtUosFvulGm8ajQbFYhG1Wn2K0/MoBEEgnx8Ee+Hx8Cltf0VRaLfaOOynmZeK
      oiHgN1Go1hHoce3FL3FpcQGt0cLM7CSdTp/JsRBGrZpsVcZgNHDhwiKiKCKK4vDBOjEXP/nb
      hx+4QS+2Cq/f80CxO0oiGafT6QyryKIootPpTg2qk+3dCUFvfHycRqPB8fExKoOdyJgfi8XC
      9773PX7ze/+M3/v9/wKrTkVoMoJepx0e75fFJ6ZCfNoakYqisPYXacSGnu9/858zFhr/1I79
      WSGdTmM2m9HpdBwfHz9mOvE8UBSF995/j5GREXLlNKNjp2fYWq2O2FMzNjo49kf96I1Gg42t
      DTRqDfv7+3i9Hq5dHRAGZVnmhz/8IQ6Hg2w2S61W4zvf+Q5LS0uYLEYWFhdOHetZ7Y6P/i2f
      y9Ns1oemHOVymUZ1oHR3gl6vRzQaJZNJ0+11sVntw8b3k+PKsky9XieRSBAOhzk4OGB+fp71
      9XV6vR7nz58frIJbm1y4eOH5b/Iz8KmkQT8NCIJAu9LD3Znk5Rdf+bXI+JhMpkEq7cFk8Dx0
      73zigOs37tDoCqjoEU/E6PdlMuk0ao0Km906MAosxFnZS5KNl7ly6cJw9q3VamQyGURRJB6P
      Uy6XyeVy7Ozs0Ov1sNlsVKtVFKGPxWzh8qWHdqyCIBAOh8nn8/R6PRYXF9nY2GBqaort7R2M
      RgMmk4lmowkCp0QPms3m4PzzeSRJ4vjomGQiRTKZolgoUCgWCT0YADqdjmazQTabw2q10u/3
      WV9fp91tMjkVxuN1owgy8Xicfk9Gr9cPWxoLhQK1Wo1qtUqpVCKVShEKhSiVSuTzeVZWVjg6
      PmJ6euoTy+I/ii/MAAAQJIHagczFhV+/lOeT9qNPwu1bS1xYmCZTaJBPxaiVMpRzaazuIPfX
      Njne2+TnP/o7ZI0Npdtla+sAm9XI//pH/5rDRJG337mOLximWSsPlbT39/c5c+YMiUQCr9eL
      z+tDo9ZiMBgfKyppNBrUajW5XI7FxUU0Gg0Wi4V6vU6tWqPZaNBpdZH7CpVKmXK5Qq/T59at
      23TbPSxmK6VimZFAcEBAXFxgZGRkmGLVPtjGGU1GdHoNB9F9Mrk0Wp0a/yPtmTqdbpCpatQ4
      Po5jt9uHhbD5+Xk8Hg8jIyMEg0GMRiOJZIJkIYZhskvkFS97B7sYRTt6nZ5qtTrcbn0crC3d
      /GyMsj8p6ukOck//hVFz+Dh43h4Hs0Eg35aopNPoDAI6vYkRj4NEuc/5K9e48eO/IOhzki+3
      GAmNYtTn2N9Y4fLLL1IvSFy89jLhkYdFIpVKhU6nQ6VSIUnSMD45ebCfBL/fj8Ph4M0338Tl
      cqHX6wmFQkQikeF9VxSFtbU1yqUykUsR8vk8Z86cARjSTnR6/XAWnopMcePGDV565dqpcztZ
      FZqVPIlMmRGPhaV7KyxcPIckCJi0WrYqZcT9fXQ6HRMTE8PPl0pl7E4HAqDVaDk7e4794gpq
      nQr/gpXNrVuIGS0qRw/hwMrlcy889b4/vl1vUyx/Rk7xnwStYh97eYJXv/v1X6vurY+L81e/
      zM7GGotXL2JQC8jdBrFcnauXgyyvb/Db3/8+yWwRl8dLJp3COBViLDJLOpPBt+hFpT1NHCuV
      SlitVprN5tDUThCEj8xSabVarl69SqlUwmKxPBa/9Ho9er3e0ESwUCicCmxTqRQup/MhVVvu
      Y3c82VBblmW2tveotBX6RZG799OYjBLHiSxmQcVRMknkK3Ok9jZY78mU0jF0dj8Oq4FWNctO
      osL6ez9h/Nq3qObTxGpJJkJmjmI5whdm0aDCZPu4ba9qGq3SF2MAdBNaRivnuPT1hyN4d/M+
      0ViWM+cuMeJ+fqfyVCqJz+f/6Df+iiAIItNzjwabZqbMXfYODrBbLBgsNiYtg2ZutRSgoNVh
      s1qwWsyPHOPhViudTjM/P0+lUqFWq32sxITNZsNms5E42ieezjM3M4n44NitVpMLFwaBZjQa
      RRAeWsyurq4wOj52ylT8JJ35JPT7fXY21qh1Vcx+9zUunfNTqmQJOSR2EjK/8Vv/hOT6HSpt
      hePlZabOnaPbbnCUKDFqN3Lj+tt89dXXGFs4y9//+DrptTI2e5jFy2F2k1WsaSPnXjxtmfvR
      90HkxSvnkL7/T3/nB5V2Aa3lyVSEzxJyT6axo+IF63eYmTidv93Y3sLvdhLLFkjsbZAoNMgc
      b1God7j7zjvcX1/nIJ5BaTfQiU0OsxXu3bzBUSoPrRJ31w4Ih0Mf1cX5uaDVahGPx5EVBZ1e
      T61URFBpkUThQbvnOh6v54mzdjqVxu12P1F3BwYyhoeHhwQCATQaDffu3aNWq5HNZlGr1acC
      8xOz8Xg8PuyiE0WRd27fIWSU2c622F2/j8XpZWXpBkq7wWGmyv1b73CcyrN84032MlWMBhUm
      ncjG1gEOh4U7t+7g8AVRul3SmfSwAnwCSWmid0xw9fwk9baCQW+kU0+xurGLdzSCy2FHI8gU
      K00cdge+gA+9ToterycZO8JkdXNuMcLWdgy7ViSWzBG5EMRsNlIrd+kUW0TGZj52ZlKjNyL9
      T//j//yD8pZMN62hUqgi6PrIskKn1qe2rKabk1A5e6cIap8WalGFbwT+OR6X97HXjo8PMZst
      NHJH3FxL43Ra6SsKl8/PUKmKIPSwOyzUSyWsepm1/WPG566h6lYo5rLs3t/jzIuX+CLQ5VQq
      FTabjb/54f+LY3yB63/+f6MOzhBdvUelLVMtJGn1RaLb60gGG+XUITfurrK9chtFY6VZTNJU
      tFhNj2eZtFot5XKZZrNJqVRibm4Oh8OBxWLh6OgIi8UyLDQlEomhu6QkSUPb1OW7N6l1JMYD
      ThLJJCvb+8idIhvLeySKJZbv3mIycgZR1BCZDrO1cZ9YPE3IbeDWyj79fodWT2AmMo5apSaV
      Sp3uzZC0OGxGNHoTVosFq1VPu1FFZw9xdm6S1HGcyek5JsJhgqEgFpMJtUpNLpPBaLHy0ssv
      oDdaCI14GR2fRpZa+GfsSBoNeo2EszuG2+3+ZMJY/81/+1//YMQbQuypOTf2AtqMB0spiL0+
      ztnxi0w4z5Dbq9K1lJ9IW3gWFEVB7im0qz061T4q7UDz/gS27ASzo4tP/GynXiZ6nGTi7As4
      tS3MTj8hvxezyYwgSlhtVuw2G3azlrXdOLNnLxDbWsLs8qMVZcwOL2Ph4Ed6mn2eqDXrVPMp
      mrUejV4DX3iee2/9LYVaB5dFhWgLcbC9xnEigc+iQXJOcnnCyG7ZSCG1x/jokyvjJpOJDz74
      gLm5ueGMLwgCZrOZ4+NjUqnUkH2pUqlQq9Wo1WpsNhuZbAaXf4TJ8DjJ6B6JUgOny41BI1Kr
      V6jU25jUMhaHD6/bSkPRMDHmY3QsDIpCu9kElYZIZAqTXoskSSTicewO+2OJjEdXBZvTTcDn
      HjjhxGM4Ha7hQE2lUiTTScYnxvH6vKc+V6tVKUjHmJyD65TUErlSmlZRxmq2fuz4USUIAvli
      HpfDTb1Wxx/wPfamxdEXeGM9gflsn9qGhDbQR+c+/UW9tkwp2kLV1SNr2uidKo4/KHHB9RW8
      Hh8qUWJ7d42evYJo6qP4KsR3M/AUFfPI7CKRAVmRUe9rp17z+V2P/gvf6GD/F/SesCQn+SLC
      bPOQ3N1g8cp56oKarXs36GpdRMIh7DYDf/MPP0FjtmOSa2gnZ6nEosTsE9RjaxgcvicycQeV
      WDUOh+MxnpAkSUMnyXq9Tq/XO7XN6nQ6qNVq5h8oZvh8Pk5MWWVZJjCSxuPx8Hd/+3d86eUr
      7O7tMheZOHWM4ESdo+ghbttAmzN6EOXw4AiVpMFkNhJ8RPPnSS20/b5MuVih3W7TbrdpNBrs
      H+xz9cWrp94nCAKdTof7Rx/gP28dbndEUcA3ayO2uk3tfh2VSsXE5MRz9RQoioKQSqWUWPKI
      TCqLgsKVa5ee+OZSucR2bI0L0y8QTx0T899EZx0EPY18B7Fo4rzhGwQDQdqdNrF0lFq1js8V
      IDgSGn6hoihUqmV+nv33tNttvun5L09xv/9Tw0lxx2AwoNVqaTabpFIpJicnSSaTtNttZEUm
      EU/g8XgwGo2n2J4nhtWPPvwnRoWiKA4Dz+Xl5YGRuKLQbLfR67Q0Gy1ESXxmjvz+/fuPVYBP
      zvu9d9/j0uVLvPvuuwRDQSJTkSfGif1en+3tgSRJsVBEFES+/e1vc3h4iEwXq+10t9eHadXr
      axuIogqDwYDFYsFsMT9x9VjauIVuuoVGpx7+7eS+HN0o8aWFryNJEtvb20iSxMTkxKkV4WQA
      KopCIhlnN7OOsL6+ruSLOcxWEwFPkKNYlJHRwDPz8LIsc+vwTcS5PK1KD/mmn+985XvPTRCT
      ZZk/vfV/YF1Q8O2+wOXFax/9oV9TKIpCNBqlWCyi02lRqdRotVrW1tawWCxYbVZixzGuXr36
      kfccHjaFP9pvAQM3yNnZWQSlx5u3lnjt6kVixyl2N+7gDM3jd1uxmQ1U6002NzaZu3AFq0HD
      0vISi4uLT3ywc7kcW5tbaLQazl88/1y1GVmWB0G5N4DP5+PO3du4PE7M5oeD+sPfJcsy9+4u
      cXZhEa1We+raZFlm+2CDWq2GbqqFwap94nHajQ7l/S4+bZiAd4RyuUI6nUJSSdRbNZS+glo1
      OLYi9VBGSlh9RqQ//MM//EG1VqXf71IslZiZOsPB/j5Wq+WpWSFBELBITg5KGxQPm3xr8fun
      gp6PgiAIpDNpeo4S7VoPj3aU5eXlAfX2c5DO+LxhsVgYGRnB5XLjdDrZ3d1ldHQUs9mMRq0h
      l8sNNDKfIeH44SzQhzNCqVRqwL5UZKKJFONBD2urO2iNevqtOvVqhWQqi6SWiKdSxJNZJsOj
      pNIp7Hb7KaLaSc+HyWRClmWuvnCVvb29x2byp52nzWbj8OgQs8nM+HiYWqXGQfQAQRC4d2+J
      Xrd3Suzr5DqymdyphiBBENje3aIfzGIZl1DrVI995gQqtYTRo6EqZtlNbJIvZbHpXEyEJ8hU
      45TrRexmF512h7o5hWdi8LyKkiRxfvECk+PTqNQSe3t7jIXCpNPPJsiZzWaC5QtoyjaUT2Ap
      eDXyGu0jFbI8KN54PB6i0ejHPs6vCtVqjV6rRqHapFat8bQ7cJI/P8Hy8jLhcJhWq8XRwQ6/
      eP1NBEmFy+VifX2dQqH0ic7nISNVIB/bZ33nGKPRSLtaJF/vMj8/w2Eqj7bXRq0zYjY9zI9J
      kjTcZj1KVT6JL7rdLk67k2q1+lznIggCE5MT/PwXP2dra4tQaJRzCxdQSVpcDg/9nkIhXxjS
      o0ulMoV8ifHwOHDacGV8NExyszRUJXx04CuKQrtU4PpP77KzNehKM9kNBOfcBC6Z6U2meD/+
      jxwkdsil8pRtUWwvdRiZGwyyvZVjpD/4gz/4gUqlQqvVsrO7g4LC+Ng4lXKVUrmI2fJkYzJB
      EHDZ3RixEQyEPjYxSavVoqnbsKid+N0jA6d4o5FkMonX633q6vNFwa2bH9Cu5NlL18gmD1Ep
      bTaiadT9Gstbh+zefZ3VVAeLUGczmkYryGzt7RM/3CGdr9OXuxQzac5fukQwGGJ9ZRmVwcyf
      /vEfI+iMGFV97q3uYDeo2Y7G6bcqrG4dEPD7n+jf22g0ANAbjMzNncXtdOD1eRibmCIyMUY+
      GcMdjBAcDREeGyX0QDAqlU4RCASGfQgn9Ge5nmM/30YsFEm1m8xMTHB0GKXfg3K1dCpOAUge
      HaA12xHlDj/92ZtMToZpNpvUajVCoRAajcDa8hbZXIaZ6RnWl25x49YKWp2JYi6HzWanXquT
      TqbptDrEE3FcLheSJJLczaJy91BrVI89F81cmqJsopIroOo2WV06ptdpsr+2h6IxkD48Jldq
      omk50Clq9pajZBNl9vYOia0WT1skTU1Os727xe07t3jpxZfZ29+jWqkOhVcHUffp7E+/1/9E
      RCSAybHIcD9br9eZnp4eSth5vU+X4f4iwGlQEWuqsGpadEUVb739FpLKCt1Rel0BX2gMa3ie
      t/7qT5ANVuppC1jsSFodZr1Co93n0qWL3Lx9k0Bwlmqjxa2V17l05TXUrQa379yiXMgjt2uY
      xheoFA+I7ywRn15k1Pb4ZDM2NkYikSCXyzE5OTlsNjnhVXlCHy8zJnfqFGtajPkipXaev9lZ
      R2/xU17Z5uBoh69+8xtsrG9gcgXQdMukMmW+PRKmGt9DEkUyjSa7q+sIei3vXX8H54ifWjpP
      Q5SYmJigUK4wOTWFS9VmrVEhflTGNzGCRiVzuLVNS6XmP/z7/w7vXJBk4pBXfZc42I5h97sp
      HCU588oF/L6BppQiy0goZFIFsttx+sZZXn51ltt/u4Pz3DiVxj5SS8ZpcLB25z6Vfou5ry9i
      KDcergDwYFszEiQWOybgD+B2uSkXK/TpDd3c4XSZuVap0Srn+Pkb76DSW3HZHxKwFLlPMpnE
      bH74N1mW2d7eZmlpiVQqxc7ODhqNhrnZKcr1LhazkZ/+/V+RLDaZmhgHoFIugKRF9dRiXJuD
      nQx252C1iu7vY3vKfvo4Hsf6FJLYx4FWLZAs1HHrmuhcZzBKbXQWD36PhXgqx1jQz8Z+Aq9d
      i97qRi0IhEYDSKJIt9XAYLbSrOSpNloYDWbqrRY6nRq7zY3f50JSQTxdxGwyMzV/lmL8gD4i
      /rEIZu3jwaggCORyOTqdDrlcjnw+z8HBAeVymVqt9lh19gSpdOoUpWEIuc1urEC/WcFgMuMP
      BdELUM53UVs1nB1zcP+gyHjQQ1uW8Fi0uEZGWbp1CySFTKGG3z1CxGdgPZ6l3mjgsftQqeFL
      r7xMuVImNBLEQJfRi4t0CzoMph61Zg2XM8RMyI7abOMgd4h/zE7ApSJZFfD7bZjNOnKFGl6/
      Dbnf42gvgdVjx6xToTabGQl7sZh1qA164rtRSvUuPnOA0YCPnb1jxiNBSntVrr7wNYRWq6U8
      awZvtVpsbK0RHBt54uvJeJqzZxa4fv09XrkSYSMuoVRTVGtpLJ4wlfQeosFFNRMjOHuBbPyA
      7fUVUlUFk9RCZbBj1QtEj+MsvvgtXp3WcuNYw7RPy+rdGxTaar78whnUGiOrm/uER71ED48Z
      G49wsLvN+WuvEHCJXP/ZFt1eBv/0AvnYPqERF6ubCcKTXlKJBN7QGdKHm2QaClMeLV2dh2sX
      Ph8rVUUZePGeMB3X19eZmZl5LKtSr9fJ5/OMPlLwymazFAoFJicnn7rNLBQKJJPJods8DNT1
      1tfXOXfuHPV6nYODA6xWK6HQ6YabN954Y9i6+GEc7W3QVlkZcVroKDKhwAg+T4Dle+/iHJuh
      U4yjdYRQtwsUOyqmI+NUyiXsNhvlYhFR0mDQCyyv7DI+EeRwe4ueysK1iwtEt9dY2T7k5Rev
      EhgP0Sh2EdV9ev0ealGDySBxe2mdveQ2Wl8eY8DPjf/wLtd+9yXyB0f4ZiexGJ+tKKfIfTZv
      b9Fo6FHSMD+9SKlQolwvMT83R3h08qPJcIqioFHrhnnnD0NSi8PgSOm3KZZk2pksBqcZejVe
      f/0nXPza98hms+hcWV66ukAmkaXWzXH58gt4DVrefP8DrrxwiWw2zoFOR6fjoV7v0mq1SaUS
      lEo+GpUCF7/0Cvu33+NLX36R2zdWsJoNZDI5Ai4PIGJz2MjlsgjA8WGM5PYaotvN1199kRs/
      W8IZnkZbymAxa9lL5pF5DpO0TwH1ep319XXq9UHfhSQ9mXcliiKt1mlpP7fbjd1uZ21tjfn5
      +VOD4ERZTavVMjd3Wo1ZrVYPFRyMRiNnz56lXC6zurqKy+Uaxll2u/2pfbQn9OeTbere3h5O
      tx2nL0TI5wTfCRvUwckaYn+QDbQ+sgJfvDio9gtTs7Tqg+vzhiYQtGbGwxMIgoDW+Thp5YUr
      l5hvzHLn8G16xR7Xrn0Fp13C5TzzXLQHQZQYccxy5fKrKLIyLI79+Z//OaHAg57qR7dAT4Ja
      rSaZSmC2mp74oxkMBuKxOMGRIFaHj9jeCu7QGB6XnWa7zuLlyzTLRfQqDaHJGdwOB9VKiakz
      ZxkL+lCp1Zy/uMDGxg5qjQq7K0DucI2OaKSWT6Iy2PG6nJxZmGdreYmZuXmWllZZvHSOXCbD
      6EQEk16LRquh1Shh947g97jQaSQMDh+TE+PYTCaMVjuldBSdzYNBJYPWTMDr+lzIchqNBkmS
      CIcHiggn5LYPQ+73SGeyeD0emq02avXgd1FkGbvDzs7uPrVqFZvNRq/XY29vj2AwiMv1ZP8u
      URxMTicVYp1Oh9vtptVqsb+/TzKZRK1WP1VW8sNp10qlgs83UJ44Pj7GbDY/V7JClmVy2RyH
      0UMik5MPeEgHhEKhj6zYatQago4Jwp5pqs0yiq35VGLgo1BkhdJxkyn7Ih6nD61WO+xtdjgc
      vPHGG0xMTHz0Fgig2WyyvbuF020fOnU/inqtTq3cZCoyhSiKJBIJkqkEYxMhJJXErQ/u8JUv
      f/WxHH+5XMZoNCJJEu12G1EU0Wg0tFotDg8P2dnZweVyEgwG2djY5NKlS8PZU6fToSjKJw7A
      P29sb29jt9ufqWZXOrrPH799xL/6+hx/8rMl/rOvXyJe7KJplrAGR1BrzeRTMdLpND6f7yOF
      Zff393G5XE9tjNnc3ByKYz0Pjo6OmJ6eRqvVUiwWyRVyOJyOJz6Ix0fHlEqlwarWaDI2NjYc
      aIlEAq1Wd8ry9HmwtHGHTijFo5ZeT3OfbB2quDL5Kjrtkz3i3nnnnUGW6aNWABisAj6vj35X
      IZXMUK0NMkMnF67RaDBZDOSLObr9DlqDmnQ6Tb3SYHd7H61ax8zM45LcOp1umG9OpVIcHh6i
      1Q5osK1WC7/fTy6XZ3w8TCQSodfrEYvHyBdyCIKIxWIhmUzS7XZ/5QW0Xq/3zFmp2+3Sbref
      adrXquX54PYGaosNj0VHp1Vn5Z27GIMeNEqPak/DmcgYpegSNw7quFQl8i2Rhiyxd/8m8Vwd
      pVViYy+Ojj5Lq6vMPiHWOEGxWHyqj9f+9jqxVBGXx4kIVCpldDo9t27dwu12Y7PZaNQb1Oo1
      Dg8PyeVylEqDfP1x9JjIZAS/z4/X46VYLBIOh6nX6+zu7jE7e+apccez0O/KZDtHQyoEPF4Q
      axTbGHJ+rp758jNT86OjoyQSiY/XEGO327Hb7dTrdaKHB7Q6LWz2AXej0+7Q7/cRpQFPpdfr
      4XPbqdcaTE5ODhurT9zQP4xgMDgkbp2cIMDIyMjwIk8aOB6F1Wp9rv3gZ410Ok2r1cJs1LO1
      tUVwcp5w8OHWIhaLUalU0Gg0TE1NPbZylYsZ+morF89NoFMZcDqs1Mo53MFBNs6iU9NT6YcS
      lGemw6xv3SMyo2UvcYzJPUvncJObW/ugd6JUC1i9gU/cOJ7KF5mfW6SQTVEs1DAY1Pybf/vv
      +M9//1+wdOc9/GOzrN79gGKzj1Mv4B6bYyzkJ5vNMjPz0B1ykDqXiMcT6PV6rl279onT2w67
      k/UjGYP1tCTnCWrZFs72BAsz5592iFM4ODj4ZB1hRqOR+bmzDwzwUqQTOQx6AxaTnXQiRb1R
      w2F1YTKZqNVqxGIxMpnMwNa010etVjE/f/a59o8f9R6TyUQ6ncZoNP5K6waBQIB2u83G+z+j
      Y5nGbTexfOtd6oIZPTU+uLnMN7/xFVZW1jhO5lAaRVqKCrNWoNajknVyAAAgAElEQVSWUSk1
      LIE57CYzly+cbEsmmT8v02g06HQ61AoptrJ9HL4QRmsAdWkfs9mGYtETW71DsdpnZjJCqauh
      361z4eyZp96/ra2tZ97bVCyKIhkROgXmLrzE9Z/+mHOXLrE4M87/82/fwn94gGAZoV09RjR5
      uL+yzNmZ8DDLpCgK7XabdDrN+Pg4fv8v36Wn0+kw9hzA6USBoihU9xRm3C8QGH1ytvJJCAaD
      v1xLpCiKBAIBAoEA3VaFn//8beyBcXrtPk6fg1o+T19UMTERRqfTcffePVSSir2dHWzeUbKx
      fUaDozjczo8MRncODpgKh5/4mtvtRm6W2Eg3mJ9wcLBTRewUcM+f4dTGSJF57+03aPZELr/0
      Clb9RxsztFLrHCsjuC1abManb19kWaZarRK5/BqF9DHvvvU6h/E8o5Nh6v0Gs5EAd67fApsJ
      p7bDTtPIiFWLSQOJ/SMuzEfwRubxmtXD462urqLRaCiXy8M9/6ODPOz+FgB+uUspqmd0ZoLp
      8RGKxeIg+/NglfnwCtnr9ZBlmdnZ2ae6/JhNZpReH5cviNWgRaOSqBRy/N0//hxPIIAiN2nU
      awTHIzRLeRxO+/BYpVKJSmXg1zYzM/OpxWmCIDA3coG7mdexePSnztuicjDi/3hiapcuXfz0
      eoJFQUKR+wONl1aKf/O//V/MjI1hDRn5H/71HxFyWRAF+N73/wVaGsSOjmg3mqyvb2CkTbLe
      wOdxcnBcIjLq4Kc/f5P5y69Sz+6gMnvIx/eof+k3OH9mnP/4x/8nDeMYbn2TQgPOjDiIpTOY
      AlN49SX++q/u8PLlIKuJQ7wWI7944wbB6fP87neuougsWNpVcrED/uHeKi6zilt3lnnpa18l
      nyrh8AZpJpfZK6u5OuMnF9vEHrlCJadle2sbs82Bkttn5bDE5XMRSn0Tv/OdryBJEm63m2ou
      yU40wejsOZy2PXo6ByPeSV7/2U+oN5vkk8d897e+zUHiJgd1DZenfYwEx3B7Ahg1g4c7m82y
      u7vLuXPnMBgM9Ho97t69y9jYGIqisLm5OfQL02g0mM1mJqZmHniCVWm1WgiCgNvtfuKqGI1G
      CT8ymTxpC/n13/ju8P8FQWA0Ms1XI98Zbqm63S537tzBbDbjmBjD4XBwdHQ0vA+jo6PPtcJ/
      XFitNsRjA3hOi3W1lcZzH6NcLtNqtail958vCH4eyHIXWVGxv7tHo9nEYdQQHJlman6M8y9/
      E6VVxeNxEZ6IUGu0yR2uMjJ7lWY5j8lgZuHCArnkHoJxBJPYROsIMeKxkSvksRm1GAw6xiem
      MAtV7sfaCI0WY5Fx/B4nmXSasfAoXdHEmekg2XgFj8vKwrUXyEWX6RvHuHxuBrfTzsryMia1
      QFsyEp6apVFIE5lbwGEzEZ5eoFfLk8uXkEWwmoy4TRJdjQ1JUuELTaITu9SrDRYvXmQsFOJw
      fYvI+QXUD35srcHMxMQEbruVQGicoN+D1WJhf/8Ai9VKeHyMbDpFLp3E6Xbj9fkxGw2MhyfR
      qkQ6nQ47Oztcvnx5mDESRRGj0ciNGzfI5/O4XC4ikQgulwubzUan00FRFEZHR7Farfh8Po6O
      jqjX60PPtEdRq9VoNBrPdGXpdrtsbm5is9nI5XL0er1Tx5KkgfHF3t4eMNiKTk1NDXsaBEEY
      bt3q9TrLy8tD04xfBoIgUC3W6ZornIwvRVHQll343U823P4wtne20ag1lDLZ50uDPg8URSaV
      iGGwuhG6ddo9AZPRgEotgaiiXqvw/vW3MFjdWM0GIhNhdCYr3XYLSRBQaVT0+jKlfIZMoUr8
      aJd6p49KUTCaTOg0aoxWF3OzUyTiMSSVjnqjis/rBaXPcSxJZHoGvVZNJpXEaLGh12vpdntU
      Cjk0JhtWk4FWo0omX8Xvc4MgINEnlsji9bmRJDX9bpdKKY+kN2PSiORLZeyOBwUfQUSR+9Br
      k6+0cFr05KutQT3hI2a7ra0tXn/9dSKRCPPz88MilSAI7O7uEgwGMRgM7OzsMDk5iSAIHB0d
      DdWh4USHU/3M1CYM2JQbGxs0m02uXLny2OvFYpGNjQ1eeumlpx6j0Wjw3nvvcfnyZaLRKOfO
      nXvsGjc2Ntjb2+Pll19mbGyMer0+VHbr9/uIooharR56NH9aK0Kv1+P6zo8xjz1YjVo9AtVF
      xsbGn+vzW9tbTIQn6DXLn94AeB7cvXt3eBMetc18tMq8s7ODzqwedPas79FsNLl69SqiKJJK
      pYYPTbc7sNSpVqvE43F+93d/F4fD8blcxydFt9tlZWUFj8dDLpdDrVYzMjJCp9Phxo0b6HQ6
      ut0uExMT5HI5NBoNPp+PRCJBsVjk6tWrQwvQp6UvYZD/7/f7HB0d8dprr53KurVaLXZ3dzEa
      jdhsNpLJJBqNhsnJgZ/u7u4uojhYicbGxrhx4wYXLlx44r09GWiBQIBarfbAfsg6nOVPJA4/
      Tq3heXFv4xbdUAZRFKgctQlJZ5mamvroDzKYAE56Lz5XXaD5+flBw3MyyY9+9CMuXbo0fIDH
      x8cYGRmh2ihjdY1QKpUHFVTxIQnviaQtBjc6Ho9js9m+0AxStVrNhQsXeP3115mamqJQKJDP
      53E6ndjtdhYWBq2JJ3ygRCKB1Wql3W4PzSzS6fSg9fEp6Pf7NBoNLBYLFy9eHD78tVqNaDSK
      Wq3m7NmBdendu3eZnJxEp9Oxs7NDv98nEAgMlKo1GlQq1WCP/5SJRZIk5ubm2Nrawmg0PhZz
      lEqlj13seup1dVusb+wwOXMGg1aF1+hmLRNF6HUxtWa4t30Pu91+apvWqNcxPKHSrNPrhgH7
      pxYDPA9O5EFarRYajYZqtYpKpWJ2dpbd3V1W11c4f+kct2/dYSzo5Ge/+IDL58+CSkunUaFU
      baHXSCQzOVSCTDyRRBTVaPU6NtbWiR8dYHV6uLt0G6/DTipbwmw2fSG0gU5wsnqp1Wr6/T5b
      W1vIskw6nR6qsxkMBuq5I965eQ+jzYNW6pPOlWi36jTaPWq5JKWOgEmrpl5vUCsX6Alq7t+7
      Q7VWY9xn5u9ev4deq/DXf/r/kW8L5FMJPB43Y6Eg6VwRjaSQLzeg30WtUeELhLDrZH70Dz8l
      na8yOTbCjZt30KpFEEQ0Oj29bpder8vmyipdRIRWkYNUFZPFhErpsrq5Sy6bGapPfNRK9XFw
      +/rrmLwhJAGO9zfpyzpU2NBkSzT1U3gMfa5ff5/QxASbK/fI1bpkEkcgK7SbFW7eXSUQHEES
      BVSSiv39fex2++c7AE7gcDgIBALIsozZbB5uA8JTY2i1WiqZBNl8GbvXzv/yR/87GwcxmpUs
      iWyB/OEWb719HZ17jP21u7SzDfouE/ffep3DWJyfvXOXsZAXqVvnr374Z/jPvoJN98VaFaxW
      K4lEgkKhwIULF4YKzY82mdy88R6vfOM38Rq7/Ls//iFr+8fkclmS6Qw2jYTa7mHr7g30Njcr
      N9/iF9dv0W7VCQQCZJMpLCY1xXoXlUqH3Shj9U5QSCeIJ2LoDBbysV2uX38Pi9HCVjJGq9bG
      Y9ezsrGDw+UjvrvM8v012u0GmYZEIRMjk8iRTB8gt3v0mwVilS5qSUU8lyEXizExPYvS7zE6
      Oko6nR72JXwacLqcrC7dptmGTKmCS+5hGpvBrVaoq91UYptks5mB14HFSrddoXC8SbZrRq/U
      2V+7heifx2PWPEjVFjGZTL+aAQCDzIbdbsdqtQ65PblCFqPRgEUv8OPra3zrlUVafYkXX7lG
      sZilXq/Qb3UJhKcxylX203XGfVbeeP8D7DYPJrOJ+YVzbG6sET88oN9rgcnHRMD5maTkPikk
      aWA6Z7PZiMfjTE9Pc3BwMNxCDJQzqty6u4JGq+UwniUyNYXH7SDo9+EwqjhKl3A7XUxNevjF
      L26jt+qZDAY5d+E8a2urNFptUBnw2K1YHRZmZ+ZIxo7RSFBp9ckn4+i1fSzWcUJzU+QOdwkF
      vPRUOpr1Bga9Frt7hLNhB7+4scpEeJzM0Q6pUg232UCmWMHhciEIKhqdNv1qgXy9w8VzC8OW
      xk9r9odBYS5XrOJw+vD6XOglCY3NjqZf5/3by3Q6XQRBZnR0Aq/XiValwuEZQUuTRrODLHfw
      jM3ieEChttsdA/rK5xkEPw2yLLO1tUWrW8cX8J0qcz+qgBA9OGQ2MqD9tttt1Gr1oBqdTnJj
      9W2+fPEbyP1B5XRiYoJGY2C5GQqF0Ol0WCxPb/T/VaHb7bK1tcXBwQF+v39IFWm1WrRaLSwW
      C1NTU4+R3jY3N6nX60OZla9+9aunZttisUij0WDkQetjJpMhnU5jMplwu93EYjF6vR5qtZpe
      r0e73R5ORuPj48NjxbdvE22Y6VfSLCwsDIPHbreLJEnk83my2SySJBGJRBBFkePjYxYWFj6T
      e/20wt0nQb/f/2IMAEVRODg4IJGOEZkeBE0f1o5RFGWgX1/rMBoa5Th2zPLBBxgselxhMzqj
      Bg5tGLUDTRmfzzcQZd3ZwefzsRS9wQuzXybge75c8eeNTqeDSqV67i2DLA8GuiRJrKys0O12
      H+sJ2NrawmazkU6nKRaLvPrqq9TrdbLZLG63G4PBcGqyaTYHVOOlpaWhpGK5XGZubg6NZqBe
      USgUhn3DqVSKmZmZYXJCURSSySQTExPPJP39MjjxFv608IVQh261WmTzGcKT48+8uL4sUy6X
      IQQ+r4+VqMj4RQ+iKFIvN7HpzIwERlhZWaFUKVJtl2hWOlQ7RQILNlLJ2Bd2AHxc029RFIcx
      w/nz57l37x6JRGJoUKdWq/H5fNy8eZOvfe1rbG1tAQMe15M4+ILwUFLdarUyNjaG0Wik2+2y
      t7fH7OwsgUAAv99Pv9+nXB4YdJw8/P1+f9iV9lk9/Cfn+Wmgmjzg9XvbX4wBsLKygtlmfOpD
      UCqWuLN5A71dQzFZY3pqmv2jXZxjDz119WYd0YNNYrkDuoYqggoCc256HQEEAbVGRUqOEosH
      CI58cQ34Pg5OZm29Xk+j0aBUKhEMBkkkEvT7ffr9PvPz81Sr1cdUHJ51zEcV5yRJotvtDl8X
      BAGVSkWv1xv+XvV6nUql8kSW66eNR7/3l4HGaELsdz+7AXCy3xzONr02v3jzTfRWPy9eWRym
      JpeXl/D7feTyeTZWN9EZdEgq6ZQdZ6lcQmMVGFvwEjzj4sbOz/CM2vGaHuanRVEgcG5Q2heE
      h+V29QNDCUVW2Fs+xjQRxeP2fCo38dNGIZPgOFPh7PwszyPGnclk8Hq99Hq9oU+A3+9nZMTL
      rZsD/SFRFDmM7pNOptEarXgcT68gNxoNMpkMAa+LjgKdSp1UOvFYL0ezWiSWyjEe9BHd3aKn
      Mg7S1Z8DPq2ETU8W8Hq9n00WSJZlfvSjHw2LKQaDAboNNo+zTE+GSexvsB3LUcyl2D+M4rSZ
      2NraJhSOcPPtt7j+3m2kXoPtgwQKHQ4PUxi8aswOPaIoYnObUWseP+dnNaQosjIozzu6rC6v
      UW4UqFUaGPTGoSrxrxrXb90mEvRw+/4OQqvIYaZCv55n6f4GyfgROouTrfu3aMhaGoUY6VKH
      fiPH3eVNWvUyLv8IP/zhn+Hw+Yntp2jXs9T6KmrZXbJ1C9lMFLdFz93725iMKu7fW0ZjtFKu
      VmhUa2xurrKyso5ZavCLtQRytczu1iqS0YHLZmTp1gd0BS3/+Jf/EZXNSzuzS0UxsnBmhv3N
      JXI1mXY5zb2VLXxeBx+8/z5dRUs6ukmm2sPttP1SNZler/epxQBqjQ6L2fTZ9ISLosjv/d7v
      EYlEnij3lyu3uHbxLDt7O5TLRdLJFK16ka2VGyjOCF957RoHh4f41FXubByxeOkCvUb3Cd/0
      Mc5JEplYDOIIWDAGJbThDkXLPn/95p9RKBROLfO/KoiSCo9/FI1Q4+23rrOxtsFRPItFDaGx
      AMv37yIbQhzvbbEZTXB2Jsz6xjazE34qjRZ376/hDY4hdPIcrq9TUKy0qwWmIxPsrNxEVpl5
      /933KCb3WNk9Zmx6nv3N+2xHDznYO0CWNIT8Nt56Zwm3z0m71MTkCSO3qtx/9210vgjHe7tE
      pi9w7fwZYsdZLr/0MnZjh2zVRC4W5TCeZdqh4vrSfSKLixzeX6PYlqgmDuh8cjtlYDD7f1or
      tyCKWKy2z64OcEKEenRmPYru0egIjAesbEXT+K063vvgLpfOzbETTaCz2LFrOhjtHiaCHraT
      DWYnRtjd3MHgEzE7fvm2R1EUMNkGXHK1RoXaIHHrzk2KcorDoyipQnzQKmh7MpX4s0QmEWV7
      e4+R8DwquYHVG8Jjt2HU67HZrSgqI+mDNXQ2DxZVh3S5i8/jxGXSsbEfQ61Rk9hex+oN4Xb4
      oZMjU6wzGxnF4JpA1y1icdjoizqcFi2b69sEw9OUU1FKzT52o8iNW/cJjrgITs1hURsQ+wV0
      Vi/+EQ83rr+BzRvCZtTT6rb5/9s7k+c47uzOfzJr3wsoLFUooLCvBBeJpCiJEkNyK6zo7onw
      2GOPHT5MjCMc4fBhDnOaSx/mr+jL3GYcs0W47XGr5YimLDVJtyhSIkESIEDsAAtboQq1r5lZ
      mXOAqggIBW7ikgDzE8ELqrKYVfl7v/f7/d5733fp0vtcv3YN1dpEdnMO1e6nozVAk8eB6PQw
      e+8OkuLEpKaQLF76uzvRgaPdx2s9Bt3c2uTKlSu89967rG1GGRo+2OdpO7bN5S8uc/5PhnH7
      Xk3dr1pVyUYl3ur6AJ/3UcrwXqU1PTI9PU0mk6Gzs5NyuYwkSQiCQEfHwZOvVHIbm7MZp33/
      5Hf9+nVCoRA9PT0HrikWi6ysrOBwOBgaGnqsokMxE+f6t3cYPHmOSPvuKkBVVSqVyo9OiX6R
      vFYDmJufw+628HAlSt9A775gj6Io3J69gafLjMNjx2x5tT3MNE2jGJcR8w46A310dTTuzqIn
      NE3jypUrZDIZAoEAHR0dz5whe/v2bd56663HFvffvHmTTz/99Jk2pJq2uwcrl8tPfSL1Knit
      STIet4dCvsDQyMFI5+bmJp4uM96Au6Eo6stGEARcbVYcfVWWU9N71Jf1iyAIhMPh+uHD9vY2
      N27cqKsw16TPH0eta/th1LzKs3pBVVUxm826GvzwmgNhoVAINiGbzeHz7dEU1TSiqUUivQer
      mV4HklBCluUjoUE0MDBAsVisZ5bWUsW7u7u5ffs2sBvoOix3vr+/n4WFhXoRyw9xOp2Ew+F6
      xufTUjMYRVHqAlV64LXfRSgUQi4p+zThBUHA52iiqrz4Wfd5JFRETLp5YE+illhY+z3d7l1F
      v6mpKXp6ejh37hyKojT8HQqFAnNzc2xubhKPxw/9/EKh8Nwe+VnSPV4FuriT7kgP21v7f/BI
      sI+FG+tkkwViq8n63xVJYXMxQaUoPdf/9awPrqpUaTF1PlaBTW/UZtkakUiE8fHxerHI3slm
      L2tra4yNjXHp0iVUVeXGjRvMzMzUl1A1bDZbw98xnU5TLpcPNPPTM7owAKfTich++XWPx8PF
      Ux/jyXSws5olFcuyvZymvGCjx3qKdCz/xM+txB7y63+8ydWv7lKpVCgUShRzeUoliXwmRyad
      Z2crxdK9KUoNwgCKXEVZtzM++HRCS3ohHA6TSCQOfd3tdpNIJIjH4wf2BLVgYnt7O+Pj44ii
      uK9zj6qqOJ1Orl69emBw+3w+bDZb/TNrG9+91PSC9IIucoFg1ws83Fihrb0VWZZ34wjW3ZpZ
      m83OwvQib505h7vTjSzLLK8++TO1qoIsq1RllYnf3aS5p4/Y/fssJjV+crGXu/fjhIJeXHaJ
      RhNVKSrwwfiHuogSPws+n4/FxcVDu2+2tLSQyWSYmZnB4/HQ0tJCtVpFluV96cbpdJpAIMD0
      9DTlchmz2Yymafh8PpqbdzVBJUkiFovR2dlZv66m9Wqz2Q7sEwRB0NVeShceAHabc1hN9npa
      cA1VVQkEmunt767PHBaLhX7fKdL3VWKLadTDepQJAu4mD0K1iretjYG+FiTRSnPAxcP5NSLD
      XQ0v0zRYuRNjvOvskRv8mqYxNze3T2byh6iqiiRJ+Hw+XDaVkmJBrexw7fe3+Pzzz+vvK5fL
      lEolBgYGGB8fZ2RkhNHRUTo6OlhZ2pVDqeSyaCbLbpbu91SrVb744gtKpdLL+6IvCF3UA9SQ
      JImZuSk6Og8Gbhbnl+jrGTiwFi+VSsws3Edx5Wgf3q9zo6lVcpkiNqcDs0nAZBIpFUqIFgtV
      SaKqCTicNgQ0RJO5HqWslCQCuQEGep9OZUBPpFIpEonEY3svT01N0dfXh9lsZmp6CrUKJiok
      dwqsrq/RHo4wEPbz3//Pb/jLP/6E//1P1/iLf/cxS8sbSKpAW1uEjbnvaOsaoNPbjqe/ieX5
      FWx2F3bFxbdTv6c/3MSNO/P87X/+L3S8gAj+y0I3HgB2Z3aL2fZo3ahp5LNZ8oUSilxLgtJQ
      FKWeu+NwODg1cppq6mCOiCCa8DZ5sNnMmMwmEAQcbic2mwWnx4XH68RsNmEym/eF6KuyisOm
      n2jlsxCLxZ5Yilg7KbJarSCIWAQJRbDjsIj09A+TjG8yOTnNH//pn/HtxCStVJlcWOHc2TP0
      DQ3jtYlYbR5a/TbKZZlEKs3I2AjVisT0/QlymTyFssTQ0DDOBu2c9IRu9gCw+2BGhkaZm59F
      UiqEQgGuXL2GKAq4vO2Ubk1w+uwYt25ME4y00uTxIwoa2Wwai8nGd1fvMXiiH1/g8U0XnoTN
      aSEff7qWoHqjtn96HHtfHxkcwiwoSIKDUjbN/bvf4fE20dniwWYSeeeddyiMq6iCQktLEF+T
      RlWWEUWJyPBpWl12LG4H//zZP7G2nmb0RA/vdlxCkAvcmXyA26G/tPO96GoJtJdiscjC/Axf
      fHkZj7+FbFHm3/7sJ0wvLGOWTJRFCRtgMglYq1X8wXa+vfE123KFn//V2z9q7Z7eznHS9yGB
      5hdX1P0q0DSNL7/8Ep/Ptyv58X1jQ03TsNvt9YqvdDpNOp0mFAphMpkwm81ks1mi0SjDw8OY
      zWZ2dnZYWlri7NmzXL16lUuXLtUb8ZXLZcbGxurBrUQiQSqV2rfs2tzcpLm5+bn6ALxKdOUB
      9uJ0Ojk5foqrV76imEkiyBq3bt0l3NdHJVVEEEXCDoHFvBWPpUQmnaEl2EHA1ERsOUWw7/lV
      4rSKiNulr5D901Dr+RWJRIjH43UVPUEQSCaTqKpKNpslkUiQzWbx+/2oqlovxt9bUxwIBNjc
      3EQURS5dugRANBqlq6vrQMfJRCJxYKBLkqT7wQ869gB7mbhzG9Es4vc2NdTElGWZdDpNsVjE
      arUSs87SFHz+VqjSip13Tlz8Mbf82qg16jhM+Pbu3buMjIxgsViQpN1gYjQabZgaMTMzw+jo
      KLIsE4vFGBoaapiPH41GEQShnufz9dXf0RrpxankcITH6As1nox2EnEUDdpbW9mJJ2huefXy
      Nbr1AHuxmC04PQ6y2ewBA5AkiftT9wmHwwSaA/z+xjWG/vDwE5AnUcyV6Woa+LG3/Npoa2tj
      cnLyscrPtQmvVrzudruZnZ1laGho3wAUxd1uP+vr6w3FcWs0NzezurpaNwBVzZPKVkinHtLq
      CvGvDyawNnVgpoSsCdiVHBupKu0tHiYmvuXMuz9BzBdYXF6idegdEtNXUCx+Lpw//dJPaXR1
      CnQYFqsVu91OPn9wY7q+ts7Jkydpb2/H4/HQ3zNAtfp8OUSapiEm3XSG9J/6fBi1vgD/8A9/
      z+Xf/pZU6VEaw/r6w4bX1PYCyeSjlBNZlut5O4/bVNfap+7tAJMrVjFlV3AFeqikN4nGs0xN
      zJDJZtnY2kQWLHzy8QcUcwV6BsY4PTpIPpenXCyQK+QJNAdI7myhNM7YeKEcCQ9QrVaxWq0U
      0xv8t7+bwmmCk+PDCOyee+8t3rBYrKzNpTHbTLT1+xHFp3OpmqaR3ynT6e49csGvHxIKhSim
      Y5gFE9GFab7bjuN0ubn8+T8yMjjI5Nwq58d6UUwiS9EknS0eCjtRfvX/FvE7QanI9J9+l2R0
      nq1MlTbPbgJco1TmWnfPvfpCfb39RCIRvL4mJFlB0x4Q6uqlkt3E5Q/S39WG2WxhZGwMu1nl
      /oNFRk6OIJdSrGd2aHXZCIV7sLyC6flIGEBF2v2RW5vclIUsA51NVHIxFmJFurxmfvX5ZQbb
      nCzGy4x0+skt5bC3trBsilOOZRDIs5aqEm730Oq1IIQitLp3w/qZ7QKFNRW3w01HYJDevhej
      Zvy68bZ10dnsZHUtwcmTI0TXY0S6u/j4Dz5hcWEGyezi7s1b9A+2I1rtLK/GkDWFty9cpKcJ
      Prs2T1ekm+RGgrGLoxSLxYYGUFOWqyHLMoHWIKHwrhd1Ae++/973r+5X9275/tTodFNts9xK
      LQT64zuKPR1HwgBqiTrlUhGzoHHqrdN8d/V3JJM7jEZOM/ZOD7/6H/+LrYJKKPAu40M9rGTK
      rE0UyMhJnO4SW1tF3jnZxjf34nw60Es5LyEk3IRtEQY+HDzys/4P6ekIgt3Pv7nQx/zcPBfO
      ncGhFdHMdprauhkc7CUU8OG0ipSxkkv18dHwKD6XHbtZYPyUFY/TSygYJpWKH3qi88Ou97FY
      7Kl1+vXAkTAAURSRZZmq1ctf/MkFvHYz/f29dI+dIdTsxeXx8NFPPqSo2VifvsX1pR3+9D/8
      RwqZLIG+Dmy2CpGTflSxQrAjQCkjEaoO03vieMz2jTh74SKrq6sIoomh7xtUeANtFAt5RkdH
      2NrawuVyoYkiK/MzXLj4/r6B7HTYCAXbSaXiBAKBx/Zh9vv9bG1t1YNwL1MZ7kVzJAxAqe66
      WNHqwvt9EXfv8Ni+9/QOnwDAaRE5+0Erba1+8j09pErbdJzZLQqRKhVOhqxUo3Z6Rvte7Zd4
      xTgcjvoxZw2TaCKe2CYUCpHOpSjLRfK5PCdO7tcU3d6OsylEtAAAAAkrSURBVB7dpFyQ+Oij
      j54YWe7u7q73QD5Kgx+OgAFks1lcLie57JNTE1RVJbaVwGZxsb5epqrKmK2PHp71++O/alU8
      dkueH3JY3a4gwuraCv0Dh2/25YqE1WpFkitPXb31uJ5lekb3BrCzk8Dn97OyvMzg8OPP50VR
      5ML758lms2QyWfLmBC2D7gMPWnsFx2t6oNZfTNM0wuEwqqoyNDyI29M4yq1pIAgQ7goT7AgS
      30o2fN9xQvcGkMvnkKoVvD7PU72/1kkxJq8QGj+oSpffkHlr6N0XfZu6pKWlhVQqxfbOFpmZ
      FDaHDafLua/opdagcHNji3QyS1PARzDUznYswUDf0dnMPi+6DoTVErnSqfShs9YPqVar3Jz4
      hkDPwfcXs2V6XeO4nD8uW1SvaGqVtYerFCuP6jtrWv1Do4N090SoVCpUq1UkSUJRFNLJFJKi
      EN+KIZosKLJCdHmVznCvrgSsXha6NgAAVVMpl8tP/TA21jd5e/QCuTmNdGz/vkFMuQh3HA9p
      9EYsTlxndSdPOpNldvI2i9EYyWQKQa5y78YVfvWbK9ybusud7yaoCiZMItz86p9Z3S4x9c1V
      JhcWUKQ8O5tpTHYL335znVQ6zbWrV8g8pwiB3tGtASxO32EtkQGNfcXye//V/pZJp0FVSKSy
      lIpl/H4/Z0ffI6SMkFwuomlQjMKZvuO99ImMnqQcj7K5PE206GRlcYbp6Qe4KiqZgsSJ0+MI
      VYXhLjfTazkK8SgbBZHpO7cYGXuHTz44zZ3JJbqcbu7dn6CtbwytmCRbKPD7r7953V/vpaDb
      PcDWThKyCjuxFdbjKXKZbTZiRc6dH2FhdpHO3m6WHqzSGmzl22+u8+nPfkqyLDH99b+ysZVh
      vD/I1Mw8ncPjRCfv8cnpPzpyR3TPSjaVQhNNYPOjrM1j8rZgp8it2XVaeptZnZ0hFGrG4XTh
      wMTGdpY/+8s/Z/H+JBSrpBJZPvrkD7HGE3QEfcxM3CTc2ozF7sap88KW50WX6dBSdpO/+/t/
      QdEEnNYSI6fOsTA3jcdsI5VPIFpdBDtDeN0dZBPrFIpZ3js/zpWphyjxDcJt3ZQqGVbnJ3EM
      fsyF0RYGehornb0JqKrKd7dv0tvfgyAIKIpCPp9HUzVUVSObzdHkbaKv78W1NT0q6NIAsqkE
      gt3H1vIDdspFqpJCZvshd2a3+PN//ylTk/OMnBjBZnEgVYoU0jEEexMmm5WVBzM4rB6kcpqd
      VJ6+8bO8//b4sT/3fxLzC/NksiksZisup7veEVJVVVpaWt64gV9DlwZQY2ZmmtZgCzMzM7T4
      XZSwEeloq7/eaFCrqsrW+jYjw7uFHI8L4b9pvMgWo8cF3e4BKpUKkiKRyWSxWCy0djTW8Pkh
      oiiiarsN4ozBvx9j8B9Et35vdnaWQKCZtegavX09Dd+z9zRoL7U+tgYGT0K3o0RRZBxOBw6n
      A0l6fP+umiFUq1V2Ekn83mZddoE00B+6XQI5nS4URaFcKgGHKwxvx7ZJxJP4vD6sFivBYKhh
      Yz4Dg0bo1gBUdTdjTdW0J0aBhwaG6x3LDQyeBd0ugcqV8vdS3I0H/8b6JoVCgXQqY8z4Bs+N
      Lj2Apmmk0mkSOwncnsaJa3JZQdQsjAyNGet9g+dGlx6gWCyyuLDI0sISVlvjwZ3OpFhaXKzr
      1BsYPA+69AD5fB6Hw0Ew1I7F3Lg1kSiKdHU9XWzAwOAwdOkBJEnC5XQRCAT2NV6oUalUiER6
      6DsmEiYGrw/dGYCmaUxPT3Pz5k02NzaZfTC3r4+Vpmkk4jv4ff7XeJcGxwXdLYEEQcBsNqNU
      Ffr6e3F73ftUx6Kr63QEw8/cAd3AoBG68wDlcplYbIvu7m4CLQFMpkcKDrIk4/c1EQwGjY2v
      wQtBdwYQj2/THAjwB598jCzJWK2PNsEWq4VSucDC4sJrvEOD44TuDKC9PcjD1YdM359maXmZ
      7p7u+muCINAeaiObS+u+AbPB0UB3BrCwsMDk5CQOuwNFVg5kdSZ3kgTbO4wlkMELQXcGIMsy
      zc3NqJqKz+/dN9CLxRIOq5uO0ME2qgbHD03TyOVy9Y6gLwPdGYDL5dqVOIzF6Io8kjDRVI2t
      jS0j6e0Nw+l0NpR4fFHozgBsNhvJxDaTk/eZmJgEQJUKzDyYpz3UjcViIR5P7Ltmb2FMMpUC
      IBGP119PpxJISuOuMcVUirKxn9AlNX3Tl1ncpLs4QCgUoqSJfHjmNDtb63z1ZZozJ7p4sLCM
      3duCXC6zvrZOJOhjMVZgqLOJ6QcLxDJFyqkYJSz8p7/5ax5MTxMJt7C0XaLJVqatc4j7k/cY
      O3OG2e++xdkWod2tceOr27z9Rx+zcn+R9y5exG1vnHphcDzRnQcAQCrx619/ztff3GJp8hv+
      5foMsizzm//7P7E27S6BUqk0D29PsZwrMDo6wLUvfsv07EOkcqH+MYpSRVNkVA1y6RSKUmFy
      5j6+QDcWrchmOs/7509SrSqYRYHyEyrPDI4fpl/84hf/1WzWjyMQRRGTebfJgsUs4vW4Eaxe
      BKnMqbfPYxM1/F4vUjmPJtiJDPbQHWpj9OQ5zFqBkdPn6Y10IkkSVrPAVjJPV2cQiyiQyhZp
      D4YI+Pw4XTZMcon5h3HCkRDxzTjBzghOm+EB3iR0KYuyvb3NL3/5SwRRoL+/D7vdQbirg2Qi
      xc9/9vNDr6spHRsYPC26HC1tbW389Kc/pVwqkYgnWItGsdtseLwulpaXDg2CGYPf4FnRpQcA
      UBSFiYkJPvvsMwRRIBQKMjDYT6Sni3y2hNftxel07utP+6LRNA1Zlo2Ks2OMbg0Adgfg+vo6
      ly9fZmFhAZPZRE93NxcuXKCjI4zT6USv925wNNC1AdRQVZX19XW2trYAOH/+/Gu+I4PjwpEw
      AAODl4WxazR4ozEMwOCNxjAAgzcawwAM3mgMAzB4ozEMwOCNxjAAgzeaY20ARuG8wZM41gZg
      FM4bPIljZwDGrG/wLBw7AzBmfYNn4dgZQA1FUQxvYPBE9FML+QJQVZVSqYTFYjE8gcFTceQN
      oDbLS5JEuVyuy2joqc7ZQL8c6SVQuVxG07T64Lfb7UZ3eINnwvwyZedeNpqmkc1mURSlXhlW
      +z7VavV13prBEeH/AzTJGtjRXrHUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Country Vs Total Death' width='192'>
      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
      eTE6cwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Filtter for country ' width='192'>
      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
      yeShI3MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Countries with Maximum No. of Death' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
